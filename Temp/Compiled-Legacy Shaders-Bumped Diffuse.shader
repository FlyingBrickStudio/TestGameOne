// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Legacy Shaders/Bumped Diffuse" {
Properties {
 _Color ("Main Color", Color) = (1.000000,1.000000,1.000000,1.000000)
 _MainTex ("Base (RGB)", 2D) = "white" { }
 _BumpMap ("Normalmap", 2D) = "bump" { }
}
SubShader { 
 LOD 300
 Tags { "RenderType"="Opaque" }


 // Stats for Vertex shader:
 //         d3d9: 73 avg math (53..93)
 //        d3d11: 52 avg math (38..65)
 // Stats for Fragment shader:
 //         d3d9: 30 avg math (16..45), 2 avg texture (2..3)
 //        d3d11: 46 avg math (27..65), 5 avg texture (3..7), 3 avg branch (2..4)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL 
-- Vertex shader for "d3d9":
// Stats: 62 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _BumpMap_ST at 20
Vector4 _MainTex_ST at 19
Vector4 unity_SHAb at 13
Vector4 unity_SHAg at 12
Vector4 unity_SHAr at 11
Vector4 unity_SHBb at 16
Vector4 unity_SHBg at 15
Vector4 unity_SHBr at 14
Vector4 unity_SHC at 17
Vector4 unity_WorldTransformParams at 18

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _BumpMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_ObjectToWorld        c0       4
//   unity_MatrixVP             c4       4
//   unity_WorldToObject        c8       3
//   unity_SHAr                 c11      1
//   unity_SHAg                 c12      1
//   unity_SHAb                 c13      1
//   unity_SHBr                 c14      1
//   unity_SHBg                 c15      1
//   unity_SHBb                 c16      1
//   unity_SHC                  c17      1
//   unity_WorldTransformParams c18      1
//   _MainTex_ST                c19      1
//   _BumpMap_ST                c20      1
//

    vs_3_0
    def c21, 1.05499995, -0.0549999997, 0, 0
    def c22, 1, 0, 0.416666657, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5.xyz
    dcl_texcoord5 o6.xy
    mad r0, v0.xyzx, c22.xxxy, c22.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r4.x, c4, r1
    dp4 r4.y, c5, r1
    dp4 r4.z, c6, r1
    dp4 r4.w, c7, r1
    mad o1.xy, v3, c19, c19.zwzw
    mad o1.zw, v3.xyxy, c20.xyxy, c20
    dp4 o2.w, c0, v0
    dp4 o3.w, c1, v0
    dp4 o4.w, c2, v0
    mul r0.xyz, c9, v2.y
    mad r0.xyz, v2.x, c8, r0
    mad r0.xyz, v2.z, c10, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c14, r2
    dp4 r3.y, c15, r2
    dp4 r3.z, c16, r2
    mad r0.xyz, c17, r0.x, r3
    mov r1.w, c22.x
    dp4 r2.x, c11, r1
    dp4 r2.y, c12, r1
    dp4 r2.z, c13, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c22.y
    log r2.x, r0.x
    log r2.y, r0.y
    log r2.z, r0.z
    mul r0.xyz, r2, c22.z
    exp r2.x, r0.x
    exp r2.y, r0.y
    exp r2.z, r0.z
    mad r0.xyz, r2, c21.x, c21.y
    max o5.xyz, r0, c22.y
    dp3 r0.z, c0, v1
    dp3 r0.x, c1, v1
    dp3 r0.y, c2, v1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o2.x, r0.z
    mul r2.xyz, r0, r1.zxyw
    mad r2.xyz, r1.yzxw, r0.yzxw, -r2
    mul r0.z, c18.w, v1.w
    mul r2.xyz, r0.z, r2
    mov o2.y, r2.x
    mov o2.z, r1.x
    mov o3.x, r0.x
    mov o4.x, r0.y
    mov o3.y, r2.y
    mov o4.y, r2.z
    mov o3.z, r1.y
    mov o4.z, r1.z
    mov o6.xy, c22.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 64 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 16 math, 2 textures
Vector4 _Color at 2
Vector4 _LightColor0 at 1
Vector4 _WorldSpaceLightPos0 at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_BumpMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Color;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float4 _WorldSpaceLightPos0;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceLightPos0 c0       1
//   _LightColor0         c1       1
//   _Color               c2       1
//   _MainTex             s0       1
//   _BumpMap             s1       1
//

    ps_3_0
    def c3, 2, -1, 0, 1
    dcl_texcoord v0
    dcl_texcoord1 v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_texcoord4_pp v4.xyz
    dcl_2d s0
    dcl_2d s1
    texld_pp r0, v0.zwzw, s1
    mad_pp r0.xy, r0.wyzw, c3.x, c3.y
    dp2add_sat_pp r0.w, r0, r0, c3.z
    add_pp r0.w, -r0.w, c3.w
    rsq_pp r0.w, r0.w
    rcp_pp r0.z, r0.w
    dp3_pp r1.x, v1, r0
    dp3_pp r1.y, v2, r0
    dp3_pp r1.z, v3, r0
    dp3_pp r0.x, r1, c0
    max_pp r1.x, r0.x, c3.z
    texld r0, v0, s0
    mul_pp r0.xyz, r0, c2
    mul_pp r1.yzw, r0.xxyz, c1.xxyz
    mul_pp r0.xyz, r0, v4
    mad_pp oC0.xyz, r1.yzww, r1.x, r0
    mov_pp oC0.w, c3.w

// approximately 18 instruction slots used (2 texture, 16 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 44 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
  Vector4 _BumpMap_ST at 96
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[45], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: mad o1.zw, v3.xxxy, cb0[6].xxxy, cb0[6].zzzw
  11: mov o2.w, r0.x
  12: mul r1.xyz, v1.yyyy, cb2[1].yzxy
  13: mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
  14: mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
  15: dp3 r0.x, r1.xyzx, r1.xyzx
  16: rsq r0.x, r0.x
  17: mul r1.xyz, r0.xxxx, r1.xyzx
  18: mov o2.x, r1.z
  19: mul r0.x, v1.w, cb2[9].w
  20: dp3 r2.x, v2.xyzx, cb2[4].xyzx
  21: dp3 r2.y, v2.xyzx, cb2[5].xyzx
  22: dp3 r2.z, v2.xyzx, cb2[6].xyzx
  23: dp3 r0.w, r2.xyzx, r2.xyzx
  24: rsq r0.w, r0.w
  25: mul r2.xyz, r0.wwww, r2.xyzx
  26: mul r3.xyz, r1.xyzx, r2.zxyz
  27: mad r3.xyz, r2.yzxy, r1.yzxy, -r3.xyzx
  28: mul r3.xyz, r0.xxxx, r3.xyzx
  29: mov o2.y, r3.x
  30: mov o2.z, r2.x
  31: mov o3.x, r1.x
  32: mov o4.x, r1.y
  33: mov o3.w, r0.y
  34: mov o4.w, r0.z
  35: mov o3.y, r3.y
  36: mov o4.y, r3.z
  37: mov o3.z, r2.y
  38: mov o4.z, r2.z
  39: mul r0.x, r2.y, r2.y
  40: mad r0.x, r2.x, r2.x, -r0.x
  41: mul r1.xyzw, r2.yzzx, r2.xyzz
  42: dp4 r3.x, cb1[41].xyzw, r1.xyzw
  43: dp4 r3.y, cb1[42].xyzw, r1.xyzw
  44: dp4 r3.z, cb1[43].xyzw, r1.xyzw
  45: mad r0.xyz, cb1[44].xyzx, r0.xxxx, r3.xyzx
  46: mov r2.w, l(1.000000)
  47: dp4 r1.x, cb1[38].xyzw, r2.xyzw
  48: dp4 r1.y, cb1[39].xyzw, r2.xyzw
  49: dp4 r1.z, cb1[40].xyzw, r2.xyzw
  50: add r0.xyz, r0.xyzx, r1.xyzx
  51: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: log r0.xyz, r0.xyzx
  53: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  54: exp r0.xyz, r0.xyzx
  55: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  56: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  57: mov o6.xy, l(0,0,0,0)
  58: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 27 math, 4 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: sample r1.xyzw, v1.zwzz, t1.xyzw, s2
   3: mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: dp2 r0.w, r1.xyxx, r1.xyxx
   5: min r0.w, r0.w, l(1.000000)
   6: add r0.w, -r0.w, l(1.000000)
   7: sqrt r1.z, r0.w
   8: eq r0.w, cb2[0].x, l(1.000000)
   9: if_nz r0.w
  10:   eq r0.w, cb2[0].y, l(1.000000)
  11:   mul r2.xyz, v3.wwww, cb2[2].xyzx
  12:   mad r2.xyz, cb2[1].xyzx, v2.wwww, r2.xyzx
  13:   mad r2.xyz, cb2[3].xyzx, v4.wwww, r2.xyzx
  14:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  15:   mov r3.y, v2.w
  16:   mov r3.z, v3.w
  17:   mov r3.w, v4.w
  18:   movc r2.xyz, r0.wwww, r2.xyzx, r3.yzwy
  19:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  20:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  21:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  22:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  23:   max r2.x, r0.w, r1.w
  24:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  25: else 
  26:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r0.w, r2.xyzw, cb1[45].xyzw
  29: dp3 r2.x, v2.xyzx, r1.xyzx
  30: dp3 r2.y, v3.xyzx, r1.xyzx
  31: dp3 r2.z, v4.xyzx, r1.xyzx
  32: mul r1.xyz, r0.wwww, cb0[2].xyzx
  33: dp3 r0.w, r2.xyzx, cb1[0].xyzx
  34: max r0.w, r0.w, l(0.000000)
  35: mul r1.xyz, r0.xyzx, r1.xyzx
  36: mul r0.xyz, r0.xyzx, v5.xyzx
  37: mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  38: mov o0.w, l(1.000000)
  39: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN 
-- Vertex shader for "d3d9":
// Stats: 53 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _BumpMap_ST at 18
Vector4 _MainTex_ST at 17
Vector4 _ProjectionParams at 11
Vector4 unity_SHBb at 14
Vector4 unity_SHBg at 13
Vector4 unity_SHBr at 12
Vector4 unity_SHC at 15
Vector4 unity_WorldTransformParams at 16

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _BumpMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_ObjectToWorld        c0       4
//   unity_MatrixVP             c4       4
//   unity_WorldToObject        c8       3
//   _ProjectionParams          c11      1
//   unity_SHBr                 c12      1
//   unity_SHBg                 c13      1
//   unity_SHBb                 c14      1
//   unity_SHC                  c15      1
//   unity_WorldTransformParams c16      1
//   _MainTex_ST                c17      1
//   _BumpMap_ST                c18      1
//

    vs_3_0
    def c19, 1, 0, 0.5, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5.xyz
    dcl_texcoord5 o6
    dcl_texcoord7 o7
    mad o1.xy, v3, c17, c17.zwzw
    mad o1.zw, v3.xyxy, c18.xyxy, c18
    dp4 o2.w, c0, v0
    dp4 o3.w, c1, v0
    dp4 o4.w, c2, v0
    mul r0, c9.xyzz, v2.y
    mad r0, v2.x, c8.xyzz, r0
    mad r0, v2.z, c10.xyzz, r0
    dp3 r1.x, r0.xyww, r0.xyww
    rsq r1.x, r1.x
    mul r0, r0, r1.x
    mul r1.x, r0.y, r0.y
    mad r1.x, r0.x, r0.x, -r1.x
    mul r2, r0.ywzx, r0
    dp4 r3.x, c12, r2
    dp4 r3.y, c13, r2
    dp4 r3.z, c14, r2
    mad o5.xyz, c15, r1.x, r3
    mad r1, v0.xyzx, c19.xxxy, c19.yyyx
    dp4 r2.x, c0, r1
    dp4 r2.y, c1, r1
    dp4 r2.z, c2, r1
    dp4 r2.w, c3, r1
    dp4 r1.x, c4, r2
    dp4 r1.w, c7, r2
    mul r3.xz, r1.xyww, c19.z
    dp4 r1.y, c5, r2
    dp4 r1.z, c6, r2
    mul r0.z, r1.y, c11.x
    mov r4, r1
    mov o6.zw, r1
    mul r3.w, r0.z, c19.z
    add o6.xy, r3.z, r3.xwzw
    dp3 r1.z, c0, v1
    dp3 r1.x, c1, v1
    dp3 r1.y, c2, v1
    dp3 r0.z, r1, r1
    rsq r0.z, r0.z
    mul r1.xyz, r0.z, r1
    mov o2.x, r1.z
    mul r2.xyz, r0.wxyw, r1
    mad r2.xyz, r0.ywxw, r1.yzxw, -r2
    mul r0.z, c16.w, v1.w
    mul r2.xyz, r0.z, r2
    mov o2.y, r2.x
    mov o2.z, r0.x
    mov o3.x, r1.x
    mov o4.x, r1.y
    mov o3.y, r2.y
    mov o4.y, r2.z
    mov o3.z, r0.y
    mov o4.z, r0.w
    mov o7, c19.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 55 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 45 math, 3 textures
Matrix4x3 unity_MatrixV at 0
Vector4 _Color at 11
Vector4 _LightColor0 at 10
Vector4 _LightShadowData at 8
Vector4 _WorldSpaceCameraPos at 3
Vector4 _WorldSpaceLightPos0 at 4
Vector4 unity_SHAb at 7
Vector4 unity_SHAg at 6
Vector4 unity_SHAr at 5
Vector4 unity_ShadowFadeCenterAndType at 9

Set 2D Texture "_ShadowMapTexture" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_BumpMap" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Color;
//   float4 _LightColor0;
//   float4 _LightShadowData;
//   sampler2D _MainTex;
//   sampler2D _ShadowMapTexture;
//   float3 _WorldSpaceCameraPos;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_MatrixV;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_ShadowFadeCenterAndType;
//
//
// Registers:
//
//   Name                          Reg   Size
//   ----------------------------- ----- ----
//   unity_MatrixV                 c0       3
//   _WorldSpaceCameraPos          c3       1
//   _WorldSpaceLightPos0          c4       1
//   unity_SHAr                    c5       1
//   unity_SHAg                    c6       1
//   unity_SHAb                    c7       1
//   _LightShadowData              c8       1
//   unity_ShadowFadeCenterAndType c9       1
//   _LightColor0                  c10      1
//   _Color                        c11      1
//   _ShadowMapTexture             s0       1
//   _MainTex                      s1       1
//   _BumpMap                      s2       1
//

    ps_3_0
    def c12, 2, -1, 0, 1
    def c13, 0.416666657, 1.05499995, -0.0549999997, 0
    dcl_texcoord v0
    dcl_texcoord1 v1
    dcl_texcoord2 v2
    dcl_texcoord3 v3
    dcl_texcoord4_pp v4.xyz
    dcl_texcoord5 v5
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    mov r0.x, v1.w
    mov r0.y, v2.w
    mov r0.z, v3.w
    add r1.xyz, r0, -c9
    add r0.xyz, -r0, c3
    dp3 r0.x, r0, c2
    dp3 r0.y, r1, r1
    rsq r0.y, r0.y
    rcp r0.y, r0.y
    lrp r1.x, c9.w, r0.y, r0.x
    mad_sat_pp r0.x, r1.x, c8.z, c8.w
    texldp_pp r1, v5, s0
    add_sat_pp r0.x, r0.x, r1.x
    mul_pp r0.xyz, r0.x, c10
    texld r1, v0, s1
    mul_pp r1.xyz, r1, c11
    mul_pp r0.xyz, r0, r1
    texld_pp r2, v0.zwzw, s2
    mad_pp r2.xy, r2.wyzw, c12.x, c12.y
    dp2add_sat_pp r0.w, r2, r2, c12.z
    add_pp r0.w, -r0.w, c12.w
    rsq_pp r0.w, r0.w
    rcp_pp r2.z, r0.w
    dp3_pp r3.x, v1, r2
    dp3_pp r3.y, v2, r2
    dp3_pp r3.z, v3, r2
    mov_pp r3.w, c12.w
    dp4_pp r2.x, c5, r3
    dp4_pp r2.y, c6, r3
    dp4_pp r2.z, c7, r3
    dp3_pp r0.w, r3, c4
    max_pp r1.w, r0.w, c12.z
    add_pp r2.xyz, r2, v4
    max_pp r3.xyz, r2, c12.z
    log_pp r2.x, r3.x
    log_pp r2.y, r3.y
    log_pp r2.z, r3.z
    mul_pp r2.xyz, r2, c13.x
    exp_pp r3.x, r2.x
    exp_pp r3.y, r2.y
    exp_pp r3.z, r2.z
    mad_pp r2.xyz, r3, c13.y, c13.z
    max_pp r3.xyz, r2, c12.z
    mul_pp r1.xyz, r1, r3
    mad_pp oC0.xyz, r0, r1.w, r1
    mov_pp oC0.w, c12.w

// approximately 47 instruction slots used (3 texture, 44 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
  Vector4 _BumpMap_ST at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: mad o1.zw, v3.xxxy, cb0[6].xxxy, cb0[6].zzzw
  12: mov o2.w, r0.x
  13: mul r2.xyz, v1.yyyy, cb3[1].yzxy
  14: mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
  15: mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
  16: dp3 r0.x, r2.xyzx, r2.xyzx
  17: rsq r0.x, r0.x
  18: mul r2.xyz, r0.xxxx, r2.xyzx
  19: mov o2.x, r2.z
  20: dp3 r3.x, v2.xyzx, cb3[4].xyzx
  21: dp3 r3.y, v2.xyzx, cb3[5].xyzx
  22: dp3 r3.z, v2.xyzx, cb3[6].xyzx
  23: dp3 r0.x, r3.xyzx, r3.xyzx
  24: rsq r0.x, r0.x
  25: mul r3.xyzw, r0.xxxx, r3.xyzz
  26: mul r4.xyz, r2.xyzx, r3.wxyw
  27: mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
  28: mul r0.x, v1.w, cb3[9].w
  29: mul r4.xyz, r0.xxxx, r4.xyzx
  30: mov o2.y, r4.x
  31: mov o2.z, r3.x
  32: mov o3.x, r2.x
  33: mov o4.x, r2.y
  34: mov o3.w, r0.y
  35: mov o4.w, r0.z
  36: mov o3.y, r4.y
  37: mov o4.y, r4.z
  38: mov o3.z, r3.y
  39: mov o4.z, r3.w
  40: mul r0.x, r3.y, r3.y
  41: mad r0.x, r3.x, r3.x, -r0.x
  42: mul r2.xyzw, r3.ywzx, r3.xyzw
  43: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  44: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  45: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  46: mad o5.xyz, cb2[44].xyzx, r0.xxxx, r3.xyzx
  47: mul r0.x, r1.y, cb1[5].x
  48: mul r0.w, r0.x, l(0.500000)
  49: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  50: mov o6.zw, r1.zzzw
  51: add o6.xy, r0.zzzz, r0.xwxx
  52: mov o7.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 65 math, 6 temp registers, 7 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy w
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyzw
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: sample r1.xyzw, v1.zwzz, t1.xyzw, s3
   3: mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: dp2 r0.w, r1.xyxx, r1.xyxx
   5: min r0.w, r0.w, l(1.000000)
   6: add r0.w, -r0.w, l(1.000000)
   7: sqrt r1.z, r0.w
   8: mov r2.y, v2.w
   9: mov r2.z, v3.w
  10: mov r2.w, v4.w
  11: add r3.xyz, -r2.yzwy, cb1[4].xyzx
  12: mov r4.x, cb4[9].z
  13: mov r4.y, cb4[10].z
  14: mov r4.z, cb4[11].z
  15: dp3 r0.w, r3.xyzx, r4.xyzx
  16: add r3.xyz, r2.yzwy, -cb3[25].xyzx
  17: dp3 r1.w, r3.xyzx, r3.xyzx
  18: sqrt r1.w, r1.w
  19: add r1.w, -r0.w, r1.w
  20: mad r0.w, cb3[25].w, r1.w, r0.w
  21: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  22: eq r1.w, cb5[0].x, l(1.000000)
  23: if_nz r1.w
  24:   eq r2.x, cb5[0].y, l(1.000000)
  25:   mul r3.xyz, v3.wwww, cb5[2].xyzx
  26:   mad r3.xyz, cb5[1].xyzx, v2.wwww, r3.xyzx
  27:   mad r3.xyz, cb5[3].xyzx, v4.wwww, r3.xyzx
  28:   add r3.xyz, r3.xyzx, cb5[4].xyzx
  29:   movc r3.xyz, r2.xxxx, r3.xyzx, r2.yzwy
  30:   add r3.xyz, r3.xyzx, -cb5[6].xyzx
  31:   mul r3.yzw, r3.xxyz, cb5[5].xxyz
  32:   mad r2.x, r3.y, l(0.250000), l(0.750000)
  33:   mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
  34:   max r3.x, r2.x, r3.y
  35:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  36: else 
  37:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  38: endif 
  39: dp4_sat r2.x, r3.xyzw, cb2[45].xyzw
  40: div r3.xy, v6.xyxx, v6.wwww
  41: sample r3.xyzw, r3.xyxx, t2.xyzw, s1
  42: add_sat r0.w, r0.w, r3.x
  43: min r2.x, r0.w, r2.x
  44: movc r0.w, r1.w, r2.x, r0.w
  45: dp3 r3.x, v2.xyzx, r1.xyzx
  46: dp3 r3.y, v3.xyzx, r1.xyzx
  47: dp3 r3.z, v4.xyzx, r1.xyzx
  48: mul r1.xyz, r0.wwww, cb0[2].xyzx
  49: if_nz r1.w
  50:   eq r0.w, cb5[0].y, l(1.000000)
  51:   mul r4.xyz, v3.wwww, cb5[2].xyzx
  52:   mad r4.xyz, cb5[1].xyzx, v2.wwww, r4.xyzx
  53:   mad r4.xyz, cb5[3].xyzx, v4.wwww, r4.xyzx
  54:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  55:   movc r2.xyz, r0.wwww, r4.xyzx, r2.yzwy
  56:   add r2.xyz, r2.xyzx, -cb5[6].xyzx
  57:   mul r2.yzw, r2.xxyz, cb5[5].xxyz
  58:   mul r0.w, r2.y, l(0.250000)
  59:   mul r1.w, cb5[0].z, l(0.500000)
  60:   mad r2.y, -cb5[0].z, l(0.500000), l(0.250000)
  61:   max r0.w, r0.w, r1.w
  62:   min r2.x, r2.y, r0.w
  63:   sample r4.xyzw, r2.xzwx, t3.xyzw, s0
  64:   add r5.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  65:   sample r5.xyzw, r5.xyzx, t3.xyzw, s0
  66:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  67:   sample r2.xyzw, r2.xyzx, t3.xyzw, s0
  68:   mov r3.w, l(1.000000)
  69:   dp4 r4.x, r4.xyzw, r3.xyzw
  70:   dp4 r4.y, r5.xyzw, r3.xyzw
  71:   dp4 r4.z, r2.xyzw, r3.xyzw
  72: else 
  73:   mov r3.w, l(1.000000)
  74:   dp4 r4.x, cb2[38].xyzw, r3.xyzw
  75:   dp4 r4.y, cb2[39].xyzw, r3.xyzw
  76:   dp4 r4.z, cb2[40].xyzw, r3.xyzw
  77: endif 
  78: add r2.xyz, r4.xyzx, v5.xyzx
  79: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  80: log r2.xyz, r2.xyzx
  81: mul r2.xyz, r2.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  82: exp r2.xyz, r2.xyzx
  83: mad r2.xyz, r2.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  84: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  85: dp3 r0.w, r3.xyzx, cb2[0].xyzx
  86: max r0.w, r0.w, l(0.000000)
  87: mul r1.xyz, r0.xyzx, r1.xyzx
  88: mul r0.xyz, r0.xyzx, r2.xyzx
  89: mad o0.xyz, r1.xyzx, r0.wwww, r0.xyzx
  90: mov o0.w, l(1.000000)
  91: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL VERTEXLIGHT_ON 
-- Vertex shader for "d3d9":
// Stats: 93 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _BumpMap_ST at 28
Vector4 _MainTex_ST at 27
Vector4 unity_4LightAtten0 at 18
Vector4 unity_4LightPosX0 at 15
Vector4 unity_4LightPosY0 at 16
Vector4 unity_4LightPosZ0 at 17
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHAb at 21
Vector4 unity_SHAg at 20
Vector4 unity_SHAr at 19
Vector4 unity_SHBb at 24
Vector4 unity_SHBg at 23
Vector4 unity_SHBr at 22
Vector4 unity_SHC at 25
Vector4 unity_WorldTransformParams at 26

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _BumpMap_ST;
//   float4 _MainTex_ST;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_LightColor           c0       4
//   unity_ObjectToWorld        c4       4
//   unity_MatrixVP             c8       4
//   unity_WorldToObject        c12      3
//   unity_4LightPosX0          c15      1
//   unity_4LightPosY0          c16      1
//   unity_4LightPosZ0          c17      1
//   unity_4LightAtten0         c18      1
//   unity_SHAr                 c19      1
//   unity_SHAg                 c20      1
//   unity_SHAb                 c21      1
//   unity_SHBr                 c22      1
//   unity_SHBg                 c23      1
//   unity_SHBb                 c24      1
//   unity_SHC                  c25      1
//   unity_WorldTransformParams c26      1
//   _MainTex_ST                c27      1
//   _BumpMap_ST                c28      1
//

    vs_3_0
    def c29, 1, 0, 9.99999997e-007, 0.416666657
    def c30, 1.05499995, -0.0549999997, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5.xyz
    dcl_texcoord5 o6.xy
    mad r0, v0.xyzx, c29.xxxy, c29.yyyx
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp4 r1.w, c7, r0
    dp4 r6.x, c8, r1
    dp4 r6.y, c9, r1
    dp4 r6.z, c10, r1
    dp4 r6.w, c11, r1
    mad o1.xy, v3, c27, c27.zwzw
    mad o1.zw, v3.xyxy, c28.xyxy, c28
    mul r0.xyz, c13, v2.y
    mad r0.xyz, v2.x, c12, r0
    mad r0.xyz, v2.z, c14, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c22, r2
    dp4 r3.y, c23, r2
    dp4 r3.z, c24, r2
    mad r0.xyz, c25, r0.x, r3
    mov r1.w, c29.x
    dp4 r2.x, c19, r1
    dp4 r2.y, c20, r1
    dp4 r2.z, c21, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c29.y
    log r2.x, r0.x
    log r2.y, r0.y
    log r2.z, r0.z
    mul r0.xyz, r2, c29.w
    exp r2.x, r0.x
    exp r2.y, r0.y
    exp r2.z, r0.z
    mad r0.xyz, r2, c30.x, c30.y
    max r0.xyz, r0, c29.y
    dp4 r0.w, c4, v0
    add r2, -r0.w, c15
    mov o2.w, r0.w
    dp4 r0.w, c5, v0
    add r3, -r0.w, c16
    mov o3.w, r0.w
    mul r4, r1.y, r3
    mul r3, r3, r3
    mad r3, r2, r2, r3
    mad r2, r2, r1.x, r4
    dp4 r0.w, c6, v0
    add r4, -r0.w, c17
    mov o4.w, r0.w
    mad r2, r4, r1.z, r2
    mad r3, r4, r4, r3
    max r3, r3, c29.z
    rsq r4.x, r3.x
    rsq r4.y, r3.y
    rsq r4.z, r3.z
    rsq r4.w, r3.w
    mov r5.x, c29.x
    mad r3, r3, c18, r5.x
    mul r2, r2, r4
    max r2, r2, c29.y
    rcp r4.x, r3.x
    rcp r4.y, r3.y
    rcp r4.z, r3.z
    rcp r4.w, r3.w
    mul r2, r2, r4
    mul r3.xyz, r2.y, c1
    mad r3.xyz, c0, r2.x, r3
    mad r2.xyz, c2, r2.z, r3
    mad r2.xyz, c3, r2.w, r2
    add o5.xyz, r0, r2
    dp3 r0.z, c4, v1
    dp3 r0.x, c5, v1
    dp3 r0.y, c6, v1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o2.x, r0.z
    mul r2.xyz, r0, r1.zxyw
    mad r2.xyz, r1.yzxw, r0.yzxw, -r2
    mul r0.z, c26.w, v1.w
    mul r2.xyz, r0.z, r2
    mov o2.y, r2.x
    mov o2.z, r1.x
    mov o3.x, r0.x
    mov o4.x, r0.y
    mov o3.y, r2.y
    mov o4.y, r2.z
    mov o3.z, r1.y
    mov o4.z, r1.z
    mov o6.xy, c29.y
    mad o0.xy, r6.w, c255, r6
    mov o0.zw, r6

// approximately 95 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 65 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
  Vector4 _BumpMap_ST at 96
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[45], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: mad o1.zw, v3.xxxy, cb0[6].xxxy, cb0[6].zzzw
  11: mul r1.xyz, v1.yyyy, cb2[1].yzxy
  12: mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
  13: mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
  14: dp3 r0.w, r1.xyzx, r1.xyzx
  15: rsq r0.w, r0.w
  16: mul r1.xyz, r0.wwww, r1.xyzx
  17: mov o2.x, r1.z
  18: mov o2.w, r0.x
  19: mul r0.w, v1.w, cb2[9].w
  20: dp3 r2.x, v2.xyzx, cb2[4].xyzx
  21: dp3 r2.y, v2.xyzx, cb2[5].xyzx
  22: dp3 r2.z, v2.xyzx, cb2[6].xyzx
  23: dp3 r1.w, r2.xyzx, r2.xyzx
  24: rsq r1.w, r1.w
  25: mul r2.xyz, r1.wwww, r2.xyzx
  26: mul r3.xyz, r1.xyzx, r2.zxyz
  27: mad r3.xyz, r2.yzxy, r1.yzxy, -r3.xyzx
  28: mul r3.xyz, r0.wwww, r3.xyzx
  29: mov o2.y, r3.x
  30: mov o2.z, r2.x
  31: mov o3.x, r1.x
  32: mov o4.x, r1.y
  33: mov o3.w, r0.y
  34: mov o3.y, r3.y
  35: mov o4.y, r3.z
  36: mov o3.z, r2.y
  37: mov o4.w, r0.z
  38: mov o4.z, r2.z
  39: mul r0.w, r2.y, r2.y
  40: mad r0.w, r2.x, r2.x, -r0.w
  41: mul r1.xyzw, r2.yzzx, r2.xyzz
  42: dp4 r3.x, cb1[41].xyzw, r1.xyzw
  43: dp4 r3.y, cb1[42].xyzw, r1.xyzw
  44: dp4 r3.z, cb1[43].xyzw, r1.xyzw
  45: mad r1.xyz, cb1[44].xyzx, r0.wwww, r3.xyzx
  46: mov r2.w, l(1.000000)
  47: dp4 r3.x, cb1[38].xyzw, r2.xyzw
  48: dp4 r3.y, cb1[39].xyzw, r2.xyzw
  49: dp4 r3.z, cb1[40].xyzw, r2.xyzw
  50: add r1.xyz, r1.xyzx, r3.xyzx
  51: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  52: log r1.xyz, r1.xyzx
  53: mul r1.xyz, r1.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  54: exp r1.xyz, r1.xyzx
  55: mad r1.xyz, r1.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  56: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  57: add r3.xyzw, -r0.yyyy, cb1[3].xyzw
  58: mul r4.xyzw, r2.yyyy, r3.xyzw
  59: mul r3.xyzw, r3.xyzw, r3.xyzw
  60: add r5.xyzw, -r0.xxxx, cb1[2].xyzw
  61: add r0.xyzw, -r0.zzzz, cb1[4].xyzw
  62: mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
  63: mad r2.xyzw, r0.xyzw, r2.zzzz, r4.xyzw
  64: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  65: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  66: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  67: rsq r3.xyzw, r0.xyzw
  68: mad r0.xyzw, r0.xyzw, cb1[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  69: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  70: mul r2.xyzw, r2.xyzw, r3.xyzw
  71: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  72: mul r0.xyzw, r0.xyzw, r2.xyzw
  73: mul r2.xyz, r0.yyyy, cb1[7].xyzx
  74: mad r2.xyz, cb1[6].xyzx, r0.xxxx, r2.xyzx
  75: mad r0.xyz, cb1[8].xyzx, r0.zzzz, r2.xyzx
  76: mad r0.xyz, cb1[9].xyzx, r0.wwww, r0.xyzx
  77: add o5.xyz, r1.xyzx, r0.xyzx
  78: mov o6.xy, l(0,0,0,0)
  79: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Keywords set in this variant: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
-- Vertex shader for "d3d9":
// Stats: 86 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 8
Matrix4x4 unity_ObjectToWorld at 4
Matrix4x3 unity_WorldToObject at 12
Vector4 _BumpMap_ST at 26
Vector4 _MainTex_ST at 25
Vector4 _ProjectionParams at 15
Vector4 unity_4LightAtten0 at 19
Vector4 unity_4LightPosX0 at 16
Vector4 unity_4LightPosY0 at 17
Vector4 unity_4LightPosZ0 at 18
Vector4 unity_LightColor[4] at 0
Vector4 unity_SHBb at 22
Vector4 unity_SHBg at 21
Vector4 unity_SHBr at 20
Vector4 unity_SHC at 23
Vector4 unity_WorldTransformParams at 24

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _BumpMap_ST;
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   float4 unity_4LightAtten0;
//   float4 unity_4LightPosX0;
//   float4 unity_4LightPosY0;
//   float4 unity_4LightPosZ0;
//   float4 unity_LightColor[8];
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_LightColor           c0       4
//   unity_ObjectToWorld        c4       4
//   unity_MatrixVP             c8       4
//   unity_WorldToObject        c12      3
//   _ProjectionParams          c15      1
//   unity_4LightPosX0          c16      1
//   unity_4LightPosY0          c17      1
//   unity_4LightPosZ0          c18      1
//   unity_4LightAtten0         c19      1
//   unity_SHBr                 c20      1
//   unity_SHBg                 c21      1
//   unity_SHBb                 c22      1
//   unity_SHC                  c23      1
//   unity_WorldTransformParams c24      1
//   _MainTex_ST                c25      1
//   _BumpMap_ST                c26      1
//

    vs_3_0
    def c27, 1, 0, 9.99999997e-007, 0.0125228781
    def c28, 0.305306017, 0.682171106, 0.5, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5.xyz
    dcl_texcoord5 o6
    dcl_texcoord7 o7
    mad o1.xy, v3, c25, c25.zwzw
    mad o1.zw, v3.xyxy, c26.xyxy, c26
    dp4 r0.x, c5, v0
    add r1, -r0.x, c17
    mov o3.w, r0.x
    mul r0, r1, r1
    dp4 r2.x, c4, v0
    add r3, -r2.x, c16
    mov o2.w, r2.x
    mad r0, r3, r3, r0
    dp4 r2.x, c6, v0
    add r4, -r2.x, c18
    mov o4.w, r2.x
    mad r0, r4, r4, r0
    max r0, r0, c27.z
    rsq r2.x, r0.x
    rsq r2.y, r0.y
    rsq r2.z, r0.z
    rsq r2.w, r0.w
    mov r5.x, c27.x
    mad r0, r0, c19, r5.x
    mul r5, c13.xyzz, v2.y
    mad r5, v2.x, c12.xyzz, r5
    mad r5, v2.z, c14.xyzz, r5
    dp3 r6.x, r5.xyww, r5.xyww
    rsq r6.x, r6.x
    mul r5, r5, r6.x
    mul r1, r1, r5.y
    mad r1, r3, r5.x, r1
    mad r1, r4, r5.wwzw, r1
    mul r1, r2, r1
    max r1, r1, c27.y
    rcp r2.x, r0.x
    rcp r2.y, r0.y
    rcp r2.z, r0.z
    rcp r2.w, r0.w
    mul r0, r1, r2
    mul r1.xyz, r0.y, c1
    mad r1.xyz, c0, r0.x, r1
    mad r0.xyz, c2, r0.z, r1
    mad r0.xyz, c3, r0.w, r0
    mad r1.xyz, r0, c28.x, c28.y
    mad r1.xyz, r0, r1, c27.w
    mul r0.w, r5.y, r5.y
    mad r0.w, r5.x, r5.x, -r0.w
    mul r2, r5.ywzx, r5
    dp4 r3.x, c20, r2
    dp4 r3.y, c21, r2
    dp4 r3.z, c22, r2
    mad r2.xyz, c23, r0.w, r3
    mad o5.xyz, r0, r1, r2
    mad r0, v0.xyzx, c27.xxxy, c27.yyyx
    dp4 r1.x, c4, r0
    dp4 r1.y, c5, r0
    dp4 r1.z, c6, r0
    dp4 r1.w, c7, r0
    dp4 r0.x, c8, r1
    dp4 r0.w, c11, r1
    mul r2.xz, r0.xyww, c28.z
    dp4 r0.y, c9, r1
    dp4 r0.z, c10, r1
    mul r1.x, r0.y, c15.x
    mov r7, r0
    mov o6.zw, r0
    mul r2.w, r1.x, c28.z
    add o6.xy, r2.z, r2.xwzw
    dp3 r0.z, c4, v1
    dp3 r0.x, c5, v1
    dp3 r0.y, c6, v1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o2.x, r0.z
    mul r1.xyz, r0, r5.wxyw
    mad r1.xyz, r5.ywxw, r0.yzxw, -r1
    mul r0.z, c24.w, v1.w
    mul r1.xyz, r0.z, r1
    mov o2.y, r1.x
    mov o2.z, r5.x
    mov o3.x, r0.x
    mov o4.x, r0.y
    mov o3.y, r1.y
    mov o4.y, r1.z
    mov o3.z, r5.y
    mov o4.z, r5.w
    mov o7, c27.y
    mad o0.xy, r7.w, c255, r7
    mov o0.zw, r7

// approximately 88 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

-- Vertex shader for "d3d11":
// Stats: 61 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
  Vector4 _BumpMap_ST at 96
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 32
  Vector4 unity_4LightPosY0 at 48
  Vector4 unity_4LightPosZ0 at 64
  Vector4 unity_4LightAtten0 at 80
  Vector4 unity_LightColor[8] at 96
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: mad o1.zw, v3.xxxy, cb0[6].xxxy, cb0[6].zzzw
  12: mul r2.xyz, v1.yyyy, cb3[1].yzxy
  13: mad r2.xyz, cb3[0].yzxy, v1.xxxx, r2.xyzx
  14: mad r2.xyz, cb3[2].yzxy, v1.zzzz, r2.xyzx
  15: dp3 r0.w, r2.xyzx, r2.xyzx
  16: rsq r0.w, r0.w
  17: mul r2.xyz, r0.wwww, r2.xyzx
  18: mov o2.x, r2.z
  19: mul r0.w, v1.w, cb3[9].w
  20: dp3 r3.x, v2.xyzx, cb3[4].xyzx
  21: dp3 r3.y, v2.xyzx, cb3[5].xyzx
  22: dp3 r3.z, v2.xyzx, cb3[6].xyzx
  23: dp3 r2.w, r3.xyzx, r3.xyzx
  24: rsq r2.w, r2.w
  25: mul r3.xyzw, r2.wwww, r3.xyzz
  26: mul r4.xyz, r2.xyzx, r3.wxyw
  27: mad r4.xyz, r3.ywxy, r2.yzxy, -r4.xyzx
  28: mul r4.xyz, r0.wwww, r4.xyzx
  29: mov o2.y, r4.x
  30: mov o2.w, r0.x
  31: mov o2.z, r3.x
  32: mov o3.x, r2.x
  33: mov o4.x, r2.y
  34: mov o3.y, r4.y
  35: mov o4.y, r4.z
  36: mov o3.w, r0.y
  37: mov o3.z, r3.y
  38: mov o4.w, r0.z
  39: mov o4.z, r3.w
  40: add r2.xyzw, -r0.xxxx, cb2[2].xyzw
  41: add r4.xyzw, -r0.yyyy, cb2[3].xyzw
  42: add r0.xyzw, -r0.zzzz, cb2[4].xyzw
  43: mul r5.xyzw, r3.yyyy, r4.xyzw
  44: mul r4.xyzw, r4.xyzw, r4.xyzw
  45: mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
  46: mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
  47: mad r2.xyzw, r0.xyzw, r3.wwzw, r2.xyzw
  48: mad r0.xyzw, r0.xyzw, r0.xyzw, r4.xyzw
  49: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  50: rsq r4.xyzw, r0.xyzw
  51: mad r0.xyzw, r0.xyzw, cb2[5].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  52: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  53: mul r2.xyzw, r2.xyzw, r4.xyzw
  54: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mul r0.xyzw, r0.xyzw, r2.xyzw
  56: mul r2.xyz, r0.yyyy, cb2[7].xyzx
  57: mad r2.xyz, cb2[6].xyzx, r0.xxxx, r2.xyzx
  58: mad r0.xyz, cb2[8].xyzx, r0.zzzz, r2.xyzx
  59: mad r0.xyz, cb2[9].xyzx, r0.wwww, r0.xyzx
  60: mad r2.xyz, r0.xyzx, l(0.305306, 0.305306, 0.305306, 0.000000), l(0.682171, 0.682171, 0.682171, 0.000000)
  61: mad r2.xyz, r0.xyzx, r2.xyzx, l(0.012523, 0.012523, 0.012523, 0.000000)
  62: mul r0.w, r3.y, r3.y
  63: mad r0.w, r3.x, r3.x, -r0.w
  64: mul r3.xyzw, r3.ywzx, r3.xyzw
  65: dp4 r4.x, cb2[41].xyzw, r3.xyzw
  66: dp4 r4.y, cb2[42].xyzw, r3.xyzw
  67: dp4 r4.z, cb2[43].xyzw, r3.xyzw
  68: mad r3.xyz, cb2[44].xyzx, r0.wwww, r4.xyzx
  69: mad o5.xyz, r0.xyzx, r2.xyzx, r3.xyzx
  70: mul r0.x, r1.y, cb1[5].x
  71: mul r0.w, r0.x, l(0.500000)
  72: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  73: mov o6.zw, r1.zzzw
  74: add o6.xy, r0.zzzz, r0.xwxx
  75: mov o7.xyzw, l(0,0,0,0)
  76: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d9":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //         d3d9: 40 math
 //        d3d11: 27 math
 // Stats for Fragment shader:
 //         d3d9: 23 avg math (15..30), 3 avg texture (2..4)
 //        d3d11: 34 avg math (26..42), 4 avg texture (3..5), 2 branch
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDADD" "RenderType"="Opaque" }
  ZWrite Off
  Blend One One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Keywords set in this variant: POINT 
-- Vertex shader for "d3d9":
// Stats: 40 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _BumpMap_ST at 13
Vector4 _MainTex_ST at 12
Vector4 unity_WorldTransformParams at 11

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _BumpMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_ObjectToWorld        c0       4
//   unity_MatrixVP             c4       4
//   unity_WorldToObject        c8       3
//   unity_WorldTransformParams c11      1
//   _MainTex_ST                c12      1
//   _BumpMap_ST                c13      1
//

    vs_3_0
    def c14, 1, 0, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    dcl_texcoord4 o5.xyz
    dcl_texcoord5 o6.xy
    mad r0, v0.xyzx, c14.xxxy, c14.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v3, c12, c12.zwzw
    mad o1.zw, v3.xyxy, c13.xyxy, c13
    dp4 o5.x, c0, v0
    dp4 o5.y, c1, v0
    dp4 o5.z, c2, v0
    dp3 r0.z, c0, v1
    dp3 r0.x, c1, v1
    dp3 r0.y, c2, v1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o2.x, r0.z
    mul r1.xyz, c9.zxyw, v2.y
    mad r1.xyz, v2.x, c8.zxyw, r1
    mad r1.xyz, v2.z, c10.zxyw, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0, r1
    mad r2.xyz, r1.zxyw, r0.yzxw, -r2
    mul r0.z, c11.w, v1.w
    mul r2.xyz, r0.z, r2
    mov o2.y, r2.x
    mov o2.z, r1.y
    mov o3.x, r0.x
    mov o4.x, r0.y
    mov o3.y, r2.y
    mov o4.y, r2.z
    mov o3.z, r1.z
    mov o4.z, r1.x
    mov o6.xy, c14.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 25 math, 3 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 5
Vector4 _LightColor0 at 4
Vector4 _WorldSpaceLightPos0 at 3

Set 2D Texture "_LightTexture0" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_BumpMap" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Color;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       3
//   _WorldSpaceLightPos0 c3       1
//   _LightColor0         c4       1
//   _Color               c5       1
//   _LightTexture0       s0       1
//   _MainTex             s1       1
//   _BumpMap             s2       1
//

    ps_3_0
    def c6, 2, -1, 0, 1
    dcl_texcoord v0
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord4 v4.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    add r0.xyz, c3, -v4
    nrm_pp r1.xyz, r0
    texld_pp r0, v0.zwzw, s2
    mad_pp r0.xy, r0.wyzw, c6.x, c6.y
    dp2add_sat_pp r0.w, r0, r0, c6.z
    add_pp r0.w, -r0.w, c6.w
    rsq_pp r0.w, r0.w
    rcp_pp r0.z, r0.w
    dp3_pp r2.x, v1, r0
    dp3_pp r2.y, v2, r0
    dp3_pp r2.z, v3, r0
    dp3_pp r0.x, r2, r1
    max_pp r1.x, r0.x, c6.z
    mad r0, v4.xyzx, c6.wwwz, c6.zzzw
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r2.z, c2, r0
    dp3 r0.x, r2, r2
    texld_pp r0, r0.x, s0
    mul_pp r0.xyz, r0.x, c4
    texld r2, v0, s1
    mul_pp r1.yzw, r2.xxyz, c5.xxyz
    mul_pp r0.xyz, r0, r1.yzww
    mul_pp oC0.xyz, r1.x, r0
    mov_pp oC0.w, c6.w

// approximately 28 instruction slots used (3 texture, 25 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 144
  Vector4 _BumpMap_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  10: mad o1.zw, v3.xxxy, cb0[10].xxxy, cb0[10].zzzw
  11: dp3 r0.y, v2.xyzx, cb1[4].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[5].xyzx
  13: dp3 r0.x, v2.xyzx, cb1[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mul r1.xyz, v1.yyyy, cb1[1].yzxy
  18: mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, r1.xyzx
  23: mul r2.xyz, r0.xyzx, r1.xyzx
  24: mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
  25: mul r0.w, v1.w, cb1[9].w
  26: mul r2.xyz, r0.wwww, r2.xyzx
  27: mov o2.y, r2.x
  28: mov o2.x, r1.z
  29: mov o2.z, r0.y
  30: mov o3.x, r1.x
  31: mov o4.x, r1.y
  32: mov o3.z, r0.z
  33: mov o4.z, r0.x
  34: mov o3.y, r2.y
  35: mov o4.y, r2.z
  36: mov o6.xy, l(0,0,0,0)
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 36 math, 5 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Color at 128
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xyz, -v5.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   5: mul r1.xyz, r1.xyzx, cb0[8].xyzx
   6: sample r2.xyzw, v1.zwzz, t1.xyzw, s3
   7: mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: dp2 r0.w, r2.xyxx, r2.xyxx
   9: min r0.w, r0.w, l(1.000000)
  10: add r0.w, -r0.w, l(1.000000)
  11: sqrt r2.z, r0.w
  12: mul r3.xyz, v5.yyyy, cb0[5].xyzx
  13: mad r3.xyz, cb0[4].xyzx, v5.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[6].xyzx, v5.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[7].xyzx
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r4.xyz, v5.yyyy, cb2[2].xyzx
  20:   mad r4.xyz, cb2[1].xyzx, v5.xxxx, r4.xyzx
  21:   mad r4.xyz, cb2[3].xyzx, v5.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  23:   movc r4.xyz, r0.wwww, r4.xyzx, v5.xyzx
  24:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  26:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r0.w, r1.w
  29:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r4.xyzw, cb1[45].xyzw
  34: dp3 r1.w, r3.xyzx, r3.xyzx
  35: sample r3.xyzw, r1.wwww, t2.xyzw, s1
  36: mul r0.w, r0.w, r3.x
  37: dp3 r3.x, v2.xyzx, r2.xyzx
  38: dp3 r3.y, v3.xyzx, r2.xyzx
  39: dp3 r3.z, v4.xyzx, r2.xyzx
  40: mul r2.xyz, r0.wwww, cb0[2].xyzx
  41: dp3 r0.x, r3.xyzx, r0.xyzx
  42: max r0.x, r0.x, l(0.000000)
  43: mul r0.yzw, r1.xxyz, r2.xxyz
  44: mul o0.xyz, r0.xxxx, r0.yzwy
  45: mov o0.w, l(1.000000)
  46: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 40 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _BumpMap_ST at 13
Vector4 _MainTex_ST at 12
Vector4 unity_WorldTransformParams at 11

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _BumpMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_ObjectToWorld        c0       4
//   unity_MatrixVP             c4       4
//   unity_WorldToObject        c8       3
//   unity_WorldTransformParams c11      1
//   _MainTex_ST                c12      1
//   _BumpMap_ST                c13      1
//

    vs_3_0
    def c14, 1, 0, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    dcl_texcoord4 o5.xyz
    dcl_texcoord5 o6.xy
    mad r0, v0.xyzx, c14.xxxy, c14.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v3, c12, c12.zwzw
    mad o1.zw, v3.xyxy, c13.xyxy, c13
    dp4 o5.x, c0, v0
    dp4 o5.y, c1, v0
    dp4 o5.z, c2, v0
    dp3 r0.z, c0, v1
    dp3 r0.x, c1, v1
    dp3 r0.y, c2, v1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o2.x, r0.z
    mul r1.xyz, c9.zxyw, v2.y
    mad r1.xyz, v2.x, c8.zxyw, r1
    mad r1.xyz, v2.z, c10.zxyw, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0, r1
    mad r2.xyz, r1.zxyw, r0.yzxw, -r2
    mul r0.z, c11.w, v1.w
    mul r2.xyz, r0.z, r2
    mov o2.y, r2.x
    mov o2.z, r1.y
    mov o3.x, r0.x
    mov o4.x, r0.y
    mov o3.y, r2.y
    mov o4.y, r2.z
    mov o3.z, r1.z
    mov o4.z, r1.x
    mov o6.xy, c14.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 15 math, 2 textures
Vector4 _Color at 2
Vector4 _LightColor0 at 1
Vector4 _WorldSpaceLightPos0 at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_BumpMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Color;
//   float4 _LightColor0;
//   sampler2D _MainTex;
//   float4 _WorldSpaceLightPos0;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   _WorldSpaceLightPos0 c0       1
//   _LightColor0         c1       1
//   _Color               c2       1
//   _MainTex             s0       1
//   _BumpMap             s1       1
//

    ps_3_0
    def c3, 2, -1, 0, 1
    dcl_texcoord v0
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_2d s0
    dcl_2d s1
    texld_pp r0, v0.zwzw, s1
    mad_pp r0.xy, r0.wyzw, c3.x, c3.y
    dp2add_sat_pp r0.w, r0, r0, c3.z
    add_pp r0.w, -r0.w, c3.w
    rsq_pp r0.w, r0.w
    rcp_pp r0.z, r0.w
    dp3_pp r1.x, v1, r0
    dp3_pp r1.y, v2, r0
    dp3_pp r1.z, v3, r0
    dp3_pp r0.x, r1, c0
    max_pp r1.x, r0.x, c3.z
    texld r0, v0, s0
    mul_pp r0.xyz, r0, c2
    mul_pp r0.xyz, r0, c1
    mul_pp oC0.xyz, r1.x, r0
    mov_pp oC0.w, c3.w

// approximately 17 instruction slots used (2 texture, 15 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
  Vector4 _BumpMap_ST at 96
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: mad o1.zw, v3.xxxy, cb0[6].xxxy, cb0[6].zzzw
  11: dp3 r0.y, v2.xyzx, cb1[4].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[5].xyzx
  13: dp3 r0.x, v2.xyzx, cb1[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mul r1.xyz, v1.yyyy, cb1[1].yzxy
  18: mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, r1.xyzx
  23: mul r2.xyz, r0.xyzx, r1.xyzx
  24: mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
  25: mul r0.w, v1.w, cb1[9].w
  26: mul r2.xyz, r0.wwww, r2.xyzx
  27: mov o2.y, r2.x
  28: mov o2.x, r1.z
  29: mov o2.z, r0.y
  30: mov o3.x, r1.x
  31: mov o4.x, r1.y
  32: mov o3.z, r0.z
  33: mov o4.z, r0.x
  34: mov o3.y, r2.y
  35: mov o4.y, r2.z
  36: mov o6.xy, l(0,0,0,0)
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 26 math, 3 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_BumpMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: sample r1.xyzw, v1.zwzz, t1.xyzw, s2
   3: mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: dp2 r0.w, r1.xyxx, r1.xyxx
   5: min r0.w, r0.w, l(1.000000)
   6: add r0.w, -r0.w, l(1.000000)
   7: sqrt r1.z, r0.w
   8: eq r0.w, cb2[0].x, l(1.000000)
   9: if_nz r0.w
  10:   eq r0.w, cb2[0].y, l(1.000000)
  11:   mul r2.xyz, v5.yyyy, cb2[2].xyzx
  12:   mad r2.xyz, cb2[1].xyzx, v5.xxxx, r2.xyzx
  13:   mad r2.xyz, cb2[3].xyzx, v5.zzzz, r2.xyzx
  14:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  15:   movc r2.xyz, r0.wwww, r2.xyzx, v5.xyzx
  16:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  17:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  18:   mad r0.w, r2.y, l(0.250000), l(0.750000)
  19:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  20:   max r2.x, r0.w, r1.w
  21:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  22: else 
  23:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  24: endif 
  25: dp4_sat r0.w, r2.xyzw, cb1[45].xyzw
  26: dp3 r2.x, v2.xyzx, r1.xyzx
  27: dp3 r2.y, v3.xyzx, r1.xyzx
  28: dp3 r2.z, v4.xyzx, r1.xyzx
  29: mul r1.xyz, r0.wwww, cb0[2].xyzx
  30: dp3 r0.w, r2.xyzx, cb1[0].xyzx
  31: max r0.w, r0.w, l(0.000000)
  32: mul r0.xyz, r0.xyzx, r1.xyzx
  33: mul o0.xyz, r0.wwww, r0.xyzx
  34: mov o0.w, l(1.000000)
  35: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 40 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _BumpMap_ST at 13
Vector4 _MainTex_ST at 12
Vector4 unity_WorldTransformParams at 11

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _BumpMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_ObjectToWorld        c0       4
//   unity_MatrixVP             c4       4
//   unity_WorldToObject        c8       3
//   unity_WorldTransformParams c11      1
//   _MainTex_ST                c12      1
//   _BumpMap_ST                c13      1
//

    vs_3_0
    def c14, 1, 0, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    dcl_texcoord4 o5.xyz
    dcl_texcoord5 o6.xy
    mad r0, v0.xyzx, c14.xxxy, c14.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v3, c12, c12.zwzw
    mad o1.zw, v3.xyxy, c13.xyxy, c13
    dp4 o5.x, c0, v0
    dp4 o5.y, c1, v0
    dp4 o5.z, c2, v0
    dp3 r0.z, c0, v1
    dp3 r0.x, c1, v1
    dp3 r0.y, c2, v1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o2.x, r0.z
    mul r1.xyz, c9.zxyw, v2.y
    mad r1.xyz, v2.x, c8.zxyw, r1
    mad r1.xyz, v2.z, c10.zxyw, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0, r1
    mad r2.xyz, r1.zxyw, r0.yzxw, -r2
    mul r0.z, c11.w, v1.w
    mul r2.xyz, r0.z, r2
    mov o2.y, r2.x
    mov o2.z, r1.y
    mov o3.x, r0.x
    mov o4.x, r0.y
    mov o3.y, r2.y
    mov o4.y, r2.z
    mov o3.z, r1.z
    mov o4.z, r1.x
    mov o6.xy, c14.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 30 math, 4 textures
Matrix4x4 unity_WorldToLight at 0
Vector4 _Color at 6
Vector4 _LightColor0 at 5
Vector4 _WorldSpaceLightPos0 at 4

Set 2D Texture "_LightTexture0" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_BumpMap" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Color;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       4
//   _WorldSpaceLightPos0 c4       1
//   _LightColor0         c5       1
//   _Color               c6       1
//   _LightTexture0       s0       1
//   _LightTextureB0      s1       1
//   _MainTex             s2       1
//   _BumpMap             s3       1
//

    ps_3_0
    def c7, 2, -1, 0, 1
    def c8, 0.5, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord4 v4.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    mad r0, v4.xyzx, c7.wwwz, c7.zzzw
    dp4 r1.x, c3, r0
    rcp r1.x, r1.x
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r2.z, c2, r0
    mad r0.xy, r2, r1.x, c8.x
    dp3 r0.z, r2, r2
    texld_pp r1, r0.z, s1
    texld_pp r0, r0, s0
    mul r0.x, r1.x, r0.w
    mul_pp r0.xyz, r0.x, c5
    cmp_pp r0.xyz, -r2.z, c7.z, r0
    texld r1, v0, s2
    mul_pp r1.xyz, r1, c6
    mul_pp r0.xyz, r0, r1
    add r1.xyz, c4, -v4
    nrm_pp r2.xyz, r1
    texld_pp r1, v0.zwzw, s3
    mad_pp r1.xy, r1.wyzw, c7.x, c7.y
    dp2add_sat_pp r0.w, r1, r1, c7.z
    add_pp r0.w, -r0.w, c7.w
    rsq_pp r0.w, r0.w
    rcp_pp r1.z, r0.w
    dp3_pp r3.x, v1, r1
    dp3_pp r3.y, v2, r1
    dp3_pp r3.z, v3, r1
    dp3_pp r0.w, r3, r2
    max_pp r1.x, r0.w, c7.z
    mul_pp oC0.xyz, r0, r1.x
    mov_pp oC0.w, c7.w

// approximately 34 instruction slots used (4 texture, 30 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 144
  Vector4 _BumpMap_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  10: mad o1.zw, v3.xxxy, cb0[10].xxxy, cb0[10].zzzw
  11: dp3 r0.y, v2.xyzx, cb1[4].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[5].xyzx
  13: dp3 r0.x, v2.xyzx, cb1[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mul r1.xyz, v1.yyyy, cb1[1].yzxy
  18: mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, r1.xyzx
  23: mul r2.xyz, r0.xyzx, r1.xyzx
  24: mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
  25: mul r0.w, v1.w, cb1[9].w
  26: mul r2.xyz, r0.wwww, r2.xyzx
  27: mov o2.y, r2.x
  28: mov o2.x, r1.z
  29: mov o2.z, r0.y
  30: mov o3.x, r1.x
  31: mov o4.x, r1.y
  32: mov o3.z, r0.z
  33: mov o4.z, r0.x
  34: mov o3.y, r2.y
  35: mov o4.y, r2.z
  36: mov o6.xy, l(0,0,0,0)
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 42 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_BumpMap" to slot 1 sampler slot 4
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Color at 128
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xyz, -v5.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   5: mul r1.xyz, r1.xyzx, cb0[8].xyzx
   6: sample r2.xyzw, v1.zwzz, t1.xyzw, s4
   7: mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: dp2 r0.w, r2.xyxx, r2.xyxx
   9: min r0.w, r0.w, l(1.000000)
  10: add r0.w, -r0.w, l(1.000000)
  11: sqrt r2.z, r0.w
  12: mul r3.xyzw, v5.yyyy, cb0[5].xyzw
  13: mad r3.xyzw, cb0[4].xyzw, v5.xxxx, r3.xyzw
  14: mad r3.xyzw, cb0[6].xyzw, v5.zzzz, r3.xyzw
  15: add r3.xyzw, r3.xyzw, cb0[7].xyzw
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r4.xyz, v5.yyyy, cb2[2].xyzx
  20:   mad r4.xyz, cb2[1].xyzx, v5.xxxx, r4.xyzx
  21:   mad r4.xyz, cb2[3].xyzx, v5.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  23:   movc r4.xyz, r0.wwww, r4.xyzx, v5.xyzx
  24:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  26:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r0.w, r1.w
  29:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r4.xyzw, cb1[45].xyzw
  34: lt r1.w, l(0.000000), r3.z
  35: and r1.w, r1.w, l(0x3f800000)
  36: div r4.xy, r3.xyxx, r3.wwww
  37: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  38: sample r4.xyzw, r4.xyxx, t2.xyzw, s1
  39: mul r1.w, r1.w, r4.w
  40: dp3 r2.w, r3.xyzx, r3.xyzx
  41: sample r3.xyzw, r2.wwww, t3.xyzw, s2
  42: mul r1.w, r1.w, r3.x
  43: mul r0.w, r0.w, r1.w
  44: dp3 r3.x, v2.xyzx, r2.xyzx
  45: dp3 r3.y, v3.xyzx, r2.xyzx
  46: dp3 r3.z, v4.xyzx, r2.xyzx
  47: mul r2.xyz, r0.wwww, cb0[2].xyzx
  48: dp3 r0.x, r3.xyzx, r0.xyzx
  49: max r0.x, r0.x, l(0.000000)
  50: mul r0.yzw, r1.xxyz, r2.xxyz
  51: mul o0.xyz, r0.xxxx, r0.yzwy
  52: mov o0.w, l(1.000000)
  53: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: POINT_COOKIE 
-- Vertex shader for "d3d9":
// Stats: 40 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _BumpMap_ST at 13
Vector4 _MainTex_ST at 12
Vector4 unity_WorldTransformParams at 11

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _BumpMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_ObjectToWorld        c0       4
//   unity_MatrixVP             c4       4
//   unity_WorldToObject        c8       3
//   unity_WorldTransformParams c11      1
//   _MainTex_ST                c12      1
//   _BumpMap_ST                c13      1
//

    vs_3_0
    def c14, 1, 0, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    dcl_texcoord4 o5.xyz
    dcl_texcoord5 o6.xy
    mad r0, v0.xyzx, c14.xxxy, c14.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v3, c12, c12.zwzw
    mad o1.zw, v3.xyxy, c13.xyxy, c13
    dp4 o5.x, c0, v0
    dp4 o5.y, c1, v0
    dp4 o5.z, c2, v0
    dp3 r0.z, c0, v1
    dp3 r0.x, c1, v1
    dp3 r0.y, c2, v1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o2.x, r0.z
    mul r1.xyz, c9.zxyw, v2.y
    mad r1.xyz, v2.x, c8.zxyw, r1
    mad r1.xyz, v2.z, c10.zxyw, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0, r1
    mad r2.xyz, r1.zxyw, r0.yzxw, -r2
    mul r0.z, c11.w, v1.w
    mul r2.xyz, r0.z, r2
    mov o2.y, r2.x
    mov o2.z, r1.y
    mov o3.x, r0.x
    mov o4.x, r0.y
    mov o3.y, r2.y
    mov o4.y, r2.z
    mov o3.z, r1.z
    mov o4.z, r1.x
    mov o6.xy, c14.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 26 math, 4 textures
Matrix4x3 unity_WorldToLight at 0
Vector4 _Color at 5
Vector4 _LightColor0 at 4
Vector4 _WorldSpaceLightPos0 at 3

Set CUBE Texture "_LightTexture0" to slot 0
Set 2D Texture "_LightTextureB0" to slot 1
Set 2D Texture "_MainTex" to slot 2
Set 2D Texture "_BumpMap" to slot 3

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Color;
//   float4 _LightColor0;
//   samplerCUBE _LightTexture0;
//   sampler2D _LightTextureB0;
//   sampler2D _MainTex;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       3
//   _WorldSpaceLightPos0 c3       1
//   _LightColor0         c4       1
//   _Color               c5       1
//   _LightTexture0       s0       1
//   _LightTextureB0      s1       1
//   _MainTex             s2       1
//   _BumpMap             s3       1
//

    ps_3_0
    def c6, 2, -1, 0, 1
    dcl_texcoord v0
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord4 v4.xyz
    dcl_cube s0
    dcl_2d s1
    dcl_2d s2
    dcl_2d s3
    add r0.xyz, c3, -v4
    nrm_pp r1.xyz, r0
    texld_pp r0, v0.zwzw, s3
    mad_pp r0.xy, r0.wyzw, c6.x, c6.y
    dp2add_sat_pp r0.w, r0, r0, c6.z
    add_pp r0.w, -r0.w, c6.w
    rsq_pp r0.w, r0.w
    rcp_pp r0.z, r0.w
    dp3_pp r2.x, v1, r0
    dp3_pp r2.y, v2, r0
    dp3_pp r2.z, v3, r0
    dp3_pp r0.x, r2, r1
    max_pp r1.x, r0.x, c6.z
    mad r0, v4.xyzx, c6.wwwz, c6.zzzw
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    dp4 r2.z, c2, r0
    dp3 r0.x, r2, r2
    texld r2, r2, s0
    texld r0, r0.x, s1
    mul_pp r0.x, r2.w, r0.x
    mul_pp r0.xyz, r0.x, c4
    texld r2, v0, s2
    mul_pp r1.yzw, r2.xxyz, c5.xxyz
    mul_pp r0.xyz, r0, r1.yzww
    mul_pp oC0.xyz, r1.x, r0
    mov_pp oC0.w, c6.w

// approximately 30 instruction slots used (4 texture, 26 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 144
  Vector4 _BumpMap_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  10: mad o1.zw, v3.xxxy, cb0[10].xxxy, cb0[10].zzzw
  11: dp3 r0.y, v2.xyzx, cb1[4].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[5].xyzx
  13: dp3 r0.x, v2.xyzx, cb1[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mul r1.xyz, v1.yyyy, cb1[1].yzxy
  18: mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, r1.xyzx
  23: mul r2.xyz, r0.xyzx, r1.xyzx
  24: mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
  25: mul r0.w, v1.w, cb1[9].w
  26: mul r2.xyz, r0.wwww, r2.xyzx
  27: mov o2.y, r2.x
  28: mov o2.x, r1.z
  29: mov o2.z, r0.y
  30: mov o3.x, r1.x
  31: mov o4.x, r1.y
  32: mov o3.z, r0.z
  33: mov o4.z, r0.x
  34: mov o3.y, r2.y
  35: mov o4.y, r2.z
  36: mov o6.xy, l(0,0,0,0)
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 37 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_BumpMap" to slot 1 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 2
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Color at 128
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xyz, -v5.xyzx, cb1[0].xyzx
   1: dp3 r0.w, r0.xyzx, r0.xyzx
   2: rsq r0.w, r0.w
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   5: mul r1.xyz, r1.xyzx, cb0[8].xyzx
   6: sample r2.xyzw, v1.zwzz, t1.xyzw, s4
   7: mad r2.xy, r2.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: dp2 r0.w, r2.xyxx, r2.xyxx
   9: min r0.w, r0.w, l(1.000000)
  10: add r0.w, -r0.w, l(1.000000)
  11: sqrt r2.z, r0.w
  12: mul r3.xyz, v5.yyyy, cb0[5].xyzx
  13: mad r3.xyz, cb0[4].xyzx, v5.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[6].xyzx, v5.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[7].xyzx
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r4.xyz, v5.yyyy, cb2[2].xyzx
  20:   mad r4.xyz, cb2[1].xyzx, v5.xxxx, r4.xyzx
  21:   mad r4.xyz, cb2[3].xyzx, v5.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  23:   movc r4.xyz, r0.wwww, r4.xyzx, v5.xyzx
  24:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  26:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r0.w, r1.w
  29:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r4.xyzw, cb1[45].xyzw
  34: dp3 r1.w, r3.xyzx, r3.xyzx
  35: sample r4.xyzw, r1.wwww, t2.xyzw, s2
  36: sample r3.xyzw, r3.xyzx, t3.xyzw, s1
  37: mul r1.w, r3.w, r4.x
  38: mul r0.w, r0.w, r1.w
  39: dp3 r3.x, v2.xyzx, r2.xyzx
  40: dp3 r3.y, v3.xyzx, r2.xyzx
  41: dp3 r3.z, v4.xyzx, r2.xyzx
  42: mul r2.xyz, r0.wwww, cb0[2].xyzx
  43: dp3 r0.x, r3.xyzx, r0.xyzx
  44: max r0.x, r0.x, l(0.000000)
  45: mul r0.yzw, r1.xxyz, r2.xxyz
  46: mul o0.xyz, r0.xxxx, r0.yzwy
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used


-- Vertex shader for "d3d9":
// Stats: 40 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _BumpMap_ST at 13
Vector4 _MainTex_ST at 12
Vector4 unity_WorldTransformParams at 11

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _BumpMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_ObjectToWorld        c0       4
//   unity_MatrixVP             c4       4
//   unity_WorldToObject        c8       3
//   unity_WorldTransformParams c11      1
//   _MainTex_ST                c12      1
//   _BumpMap_ST                c13      1
//

    vs_3_0
    def c14, 1, 0, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xyz
    dcl_texcoord3 o4.xyz
    dcl_texcoord4 o5.xyz
    dcl_texcoord5 o6.xy
    mad r0, v0.xyzx, c14.xxxy, c14.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v3, c12, c12.zwzw
    mad o1.zw, v3.xyxy, c13.xyxy, c13
    dp4 o5.x, c0, v0
    dp4 o5.y, c1, v0
    dp4 o5.z, c2, v0
    dp3 r0.z, c0, v1
    dp3 r0.x, c1, v1
    dp3 r0.y, c2, v1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o2.x, r0.z
    mul r1.xyz, c9.zxyw, v2.y
    mad r1.xyz, v2.x, c8.zxyw, r1
    mad r1.xyz, v2.z, c10.zxyw, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0, r1
    mad r2.xyz, r1.zxyw, r0.yzxw, -r2
    mul r0.z, c11.w, v1.w
    mul r2.xyz, r0.z, r2
    mov o2.y, r2.x
    mov o2.z, r1.y
    mov o3.x, r0.x
    mov o4.x, r0.y
    mov o3.y, r2.y
    mov o4.y, r2.z
    mov o3.z, r1.z
    mov o4.z, r1.x
    mov o6.xy, c14.y
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 42 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 19 math, 3 textures
Matrix4x2 unity_WorldToLight at 0
Vector4 _Color at 4
Vector4 _LightColor0 at 3
Vector4 _WorldSpaceLightPos0 at 2

Set 2D Texture "_LightTexture0" to slot 0
Set 2D Texture "_MainTex" to slot 1
Set 2D Texture "_BumpMap" to slot 2

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Color;
//   float4 _LightColor0;
//   sampler2D _LightTexture0;
//   sampler2D _MainTex;
//   float4 _WorldSpaceLightPos0;
//   row_major float4x4 unity_WorldToLight;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   unity_WorldToLight   c0       2
//   _WorldSpaceLightPos0 c2       1
//   _LightColor0         c3       1
//   _Color               c4       1
//   _LightTexture0       s0       1
//   _MainTex             s1       1
//   _BumpMap             s2       1
//

    ps_3_0
    def c5, 2, -1, 0, 1
    dcl_texcoord v0
    dcl_texcoord1_pp v1.xyz
    dcl_texcoord2_pp v2.xyz
    dcl_texcoord3_pp v3.xyz
    dcl_texcoord4 v4.xyz
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2
    texld_pp r0, v0.zwzw, s2
    mad_pp r0.xy, r0.wyzw, c5.x, c5.y
    dp2add_sat_pp r0.w, r0, r0, c5.z
    add_pp r0.w, -r0.w, c5.w
    rsq_pp r0.w, r0.w
    rcp_pp r0.z, r0.w
    dp3_pp r1.x, v1, r0
    dp3_pp r1.y, v2, r0
    dp3_pp r1.z, v3, r0
    dp3_pp r0.x, r1, c2
    max_pp r1.x, r0.x, c5.z
    mad r0, v4.xyzx, c5.wwwz, c5.zzzw
    dp4 r2.x, c0, r0
    dp4 r2.y, c1, r0
    texld_pp r0, r2, s0
    mul_pp r0.xyz, r0.w, c3
    texld r2, v0, s1
    mul_pp r1.yzw, r2.xxyz, c4.xxyz
    mul_pp r0.xyz, r0, r1.yzww
    mul_pp oC0.xyz, r1.x, r0
    mov_pp oC0.w, c5.w

// approximately 22 instruction slots used (3 texture, 19 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 144
  Vector4 _BumpMap_ST at 160
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float   xy  
//
      vs_4_0
      dcl_constantbuffer CB0[11], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyz
      dcl_output o4.xyz
      dcl_output o5.xyz
      dcl_output o6.xy
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad o5.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r0.xyzw, cb2[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb2[19].xyzw, r1.zzzz, r0.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r0.xyzw
   9: mad o1.xy, v3.xyxx, cb0[9].xyxx, cb0[9].zwzz
  10: mad o1.zw, v3.xxxy, cb0[10].xxxy, cb0[10].zzzw
  11: dp3 r0.y, v2.xyzx, cb1[4].xyzx
  12: dp3 r0.z, v2.xyzx, cb1[5].xyzx
  13: dp3 r0.x, v2.xyzx, cb1[6].xyzx
  14: dp3 r0.w, r0.xyzx, r0.xyzx
  15: rsq r0.w, r0.w
  16: mul r0.xyz, r0.wwww, r0.xyzx
  17: mul r1.xyz, v1.yyyy, cb1[1].yzxy
  18: mad r1.xyz, cb1[0].yzxy, v1.xxxx, r1.xyzx
  19: mad r1.xyz, cb1[2].yzxy, v1.zzzz, r1.xyzx
  20: dp3 r0.w, r1.xyzx, r1.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, r1.xyzx
  23: mul r2.xyz, r0.xyzx, r1.xyzx
  24: mad r2.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
  25: mul r0.w, v1.w, cb1[9].w
  26: mul r2.xyz, r0.wwww, r2.xyzx
  27: mov o2.y, r2.x
  28: mov o2.x, r1.z
  29: mov o2.z, r0.y
  30: mov o3.x, r1.x
  31: mov o4.x, r1.y
  32: mov o3.z, r0.z
  33: mov o4.z, r0.x
  34: mov o3.y, r2.y
  35: mov o4.y, r2.z
  36: mov o6.xy, l(0,0,0,0)
  37: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 31 math, 4 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_BumpMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 64
  Vector4 _LightColor0 at 32
  Vector4 _Color at 128
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xy          6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 4
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[8].xyzx
   2: sample r1.xyzw, v1.zwzz, t1.xyzw, s3
   3: mad r1.xy, r1.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   4: dp2 r0.w, r1.xyxx, r1.xyxx
   5: min r0.w, r0.w, l(1.000000)
   6: add r0.w, -r0.w, l(1.000000)
   7: sqrt r1.z, r0.w
   8: mul r2.xy, v5.yyyy, cb0[5].xyxx
   9: mad r2.xy, cb0[4].xyxx, v5.xxxx, r2.xyxx
  10: mad r2.xy, cb0[6].xyxx, v5.zzzz, r2.xyxx
  11: add r2.xy, r2.xyxx, cb0[7].xyxx
  12: eq r0.w, cb2[0].x, l(1.000000)
  13: if_nz r0.w
  14:   eq r0.w, cb2[0].y, l(1.000000)
  15:   mul r3.xyz, v5.yyyy, cb2[2].xyzx
  16:   mad r3.xyz, cb2[1].xyzx, v5.xxxx, r3.xyzx
  17:   mad r3.xyz, cb2[3].xyzx, v5.zzzz, r3.xyzx
  18:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  19:   movc r3.xyz, r0.wwww, r3.xyzx, v5.xyzx
  20:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  21:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  22:   mad r0.w, r3.y, l(0.250000), l(0.750000)
  23:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r3.x, r0.w, r1.w
  25:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  26: else 
  27:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r0.w, r3.xyzw, cb1[45].xyzw
  30: sample r2.xyzw, r2.xyxx, t2.xyzw, s1
  31: mul r0.w, r0.w, r2.w
  32: dp3 r2.x, v2.xyzx, r1.xyzx
  33: dp3 r2.y, v3.xyzx, r1.xyzx
  34: dp3 r2.z, v4.xyzx, r1.xyzx
  35: mul r1.xyz, r0.wwww, cb0[2].xyzx
  36: dp3 r0.w, r2.xyzx, cb1[0].xyzx
  37: max r0.w, r0.w, l(0.000000)
  38: mul r0.xyz, r0.xyzx, r1.xyzx
  39: mul o0.xyz, r0.wwww, r0.xyzx
  40: mov o0.w, l(1.000000)
  41: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //         d3d9: 38 math
 //        d3d11: 26 math
 // Stats for Fragment shader:
 //         d3d9: 11 math, 1 texture
 //        d3d11: 9 math, 1 texture
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PREPASSBASE" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d9":
// Stats: 38 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _BumpMap_ST at 12
Vector4 unity_WorldTransformParams at 11

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _BumpMap_ST;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_ObjectToWorld        c0       4
//   unity_MatrixVP             c4       4
//   unity_WorldToObject        c8       3
//   unity_WorldTransformParams c11      1
//   _BumpMap_ST                c12      1
//

    vs_3_0
    def c13, 1, 0, 0, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    mad r0, v0.xyzx, c13.xxxy, c13.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r3.x, c4, r1
    dp4 r3.y, c5, r1
    dp4 r3.z, c6, r1
    dp4 r3.w, c7, r1
    mad o1.xy, v3, c12, c12.zwzw
    dp4 o2.w, c0, v0
    dp4 o3.w, c1, v0
    dp4 o4.w, c2, v0
    dp3 r0.z, c0, v1
    dp3 r0.x, c1, v1
    dp3 r0.y, c2, v1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o2.x, r0.z
    mul r1.xyz, c9.zxyw, v2.y
    mad r1.xyz, v2.x, c8.zxyw, r1
    mad r1.xyz, v2.z, c10.zxyw, r1
    dp3 r0.w, r1, r1
    rsq r0.w, r0.w
    mul r1.xyz, r0.w, r1
    mul r2.xyz, r0, r1
    mad r2.xyz, r1.zxyw, r0.yzxw, -r2
    mul r0.z, c11.w, v1.w
    mul r2.xyz, r0.z, r2
    mov o2.y, r2.x
    mov o2.z, r1.y
    mov o3.x, r0.x
    mov o4.x, r0.y
    mov o3.y, r2.y
    mov o4.y, r2.z
    mov o3.z, r1.z
    mov o4.z, r1.x
    mad o0.xy, r3.w, c255, r3
    mov o0.zw, r3

// approximately 40 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 11 math, 1 textures
Set 2D Texture "_BumpMap" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   sampler2D _BumpMap;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   _BumpMap     s0       1
//

    ps_3_0
    def c0, 2, -1, 0, 1
    def c1, 0.5, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord1 v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_2d s0
    texld_pp r0, v0, s0
    mad_pp r0.xy, r0.wyzw, c0.x, c0.y
    dp2add_sat_pp r0.w, r0, r0, c0.z
    add_pp r0.w, -r0.w, c0.w
    rsq_pp r0.w, r0.w
    rcp_pp r0.z, r0.w
    dp3_pp r1.x, v1, r0
    dp3_pp r1.y, v2, r0
    dp3_pp r1.z, v3, r0
    mad_pp oC0.xyz, r1, c1.x, c1.x
    mov_pp oC0.w, c0.z

// approximately 12 instruction slots used (1 texture, 11 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 26 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (96 bytes) on slot 0 {
  Vector4 _BumpMap_ST at 80
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 2 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb1[3].xyzw
   4: mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb2[18].xyzw
   6: mad r2.xyzw, cb2[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[20].xyzw, r1.wwww, r2.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: mov o2.w, r0.x
  11: dp3 r1.y, v2.xyzx, cb1[4].xyzx
  12: dp3 r1.z, v2.xyzx, cb1[5].xyzx
  13: dp3 r1.x, v2.xyzx, cb1[6].xyzx
  14: dp3 r0.x, r1.xyzx, r1.xyzx
  15: rsq r0.x, r0.x
  16: mul r1.xyz, r0.xxxx, r1.xyzx
  17: mul r2.xyz, v1.yyyy, cb1[1].yzxy
  18: mad r2.xyz, cb1[0].yzxy, v1.xxxx, r2.xyzx
  19: mad r2.xyz, cb1[2].yzxy, v1.zzzz, r2.xyzx
  20: dp3 r0.x, r2.xyzx, r2.xyzx
  21: rsq r0.x, r0.x
  22: mul r2.xyz, r0.xxxx, r2.xyzx
  23: mul r3.xyz, r1.xyzx, r2.xyzx
  24: mad r3.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  25: mul r0.x, v1.w, cb1[9].w
  26: mul r3.xyz, r0.xxxx, r3.xyzx
  27: mov o2.y, r3.x
  28: mov o2.x, r2.z
  29: mov o2.z, r1.y
  30: mov o3.x, r2.x
  31: mov o4.x, r2.y
  32: mov o3.z, r1.z
  33: mov o4.z, r1.x
  34: mov o3.w, r0.y
  35: mov o4.w, r0.z
  36: mov o3.y, r3.y
  37: mov o4.y, r3.z
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 9 math, 2 temp registers, 1 textures
Set 2D Texture "_BumpMap" to slot 0

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_sampler s0, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   2: dp2 r0.w, r0.xyxx, r0.xyxx
   3: min r0.w, r0.w, l(1.000000)
   4: add r0.w, -r0.w, l(1.000000)
   5: sqrt r0.z, r0.w
   6: dp3 r1.x, v2.xyzx, r0.xyzx
   7: dp3 r1.y, v3.xyzx, r0.xyzx
   8: dp3 r1.z, v4.xyzx, r0.xyzx
   9: mad o0.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  10: mov o0.w, l(0)
  11: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //         d3d9: 48 math
 //        d3d11: 36 math
 // Stats for Fragment shader:
 //         d3d9: 5 avg math (4..7), 2 texture
 //        d3d11: 4 avg math (4..5), 2 texture
 Pass {
  Name "PREPASS"
  Tags { "LIGHTMODE"="PREPASSFINAL" "RenderType"="Opaque" }
  ZWrite Off
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d9":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _MainTex_ST at 19
Vector4 _ProjectionParams at 11
Vector4 unity_SHAb at 14
Vector4 unity_SHAg at 13
Vector4 unity_SHAr at 12
Vector4 unity_SHBb at 17
Vector4 unity_SHBg at 16
Vector4 unity_SHBr at 15
Vector4 unity_SHC at 18

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_ObjectToWorld c0       4
//   unity_MatrixVP      c4       4
//   unity_WorldToObject c8       3
//   _ProjectionParams   c11      1
//   unity_SHAr          c12      1
//   unity_SHAg          c13      1
//   unity_SHAb          c14      1
//   unity_SHBr          c15      1
//   unity_SHBg          c16      1
//   unity_SHBb          c17      1
//   unity_SHC           c18      1
//   _MainTex_ST         c19      1
//

    vs_3_0
    def c20, 1.05499995, -0.0549999997, 0, 0
    def c21, 1, 0, 0.5, 0.416666657
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5.xyz
    mad o1.xy, v2, c19, c19.zwzw
    dp4 o2.x, c0, v0
    dp4 o2.y, c1, v0
    dp4 o2.z, c2, v0
    mad r0, v0.xyzx, c21.xxxy, c21.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r0.x, c4, r1
    dp4 r0.w, c7, r1
    mul r2.xz, r0.xyww, c21.z
    dp4 r0.y, c5, r1
    dp4 r0.z, c6, r1
    mul r1.x, r0.y, c11.x
    mov r4, r0
    mov o3.zw, r0
    mul r2.w, r1.x, c21.z
    add o3.xy, r2.z, r2.xwzw
    mul r0.xyz, c9, v1.y
    mad r0.xyz, v1.x, c8, r0
    mad r0.xyz, v1.z, c10, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c15, r2
    dp4 r3.y, c16, r2
    dp4 r3.z, c17, r2
    mad r0.xyz, c18, r0.x, r3
    mov r1.w, c21.x
    dp4 r2.x, c12, r1
    dp4 r2.y, c13, r1
    dp4 r2.z, c14, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c21.y
    log r1.x, r0.x
    log r1.y, r0.y
    log r1.z, r0.z
    mul r0.xyz, r1, c21.w
    exp r1.x, r0.x
    exp r1.y, r0.y
    exp r1.z, r0.z
    mad r0.xyz, r1, c20.x, c20.y
    max o5.xyz, r0, c21.y
    mov o4, c21.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 50 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 7 math, 2 textures
Vector4 _Color at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightBuffer" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   sampler2D _LightBuffer;
//   sampler2D _MainTex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   _Color       c0       1
//   _MainTex     s0       1
//   _LightBuffer s1       1
//

    ps_3_0
    def c1, 1, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord2 v1
    dcl_texcoord4 v2.xyz
    dcl_2d s0
    dcl_2d s1
    texldp_pp r0, v1, s1
    log_pp r1.x, r0.x
    log_pp r1.y, r0.y
    log_pp r1.z, r0.z
    add_pp r0.xyz, -r1, v2
    texld r1, v0, s0
    mul_pp r1.xyz, r1, c0
    mul_pp oC0.xyz, r0, r1
    mov_pp oC0.w, c1.x

// approximately 9 instruction slots used (2 texture, 7 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 36 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad o2.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: mul r0.y, r0.y, cb1[5].x
  12: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  13: mov o3.zw, r0.zzzw
  14: add o3.xy, r1.zzzz, r1.xwxx
  15: mov o4.xyzw, l(0,0,0,0)
  16: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  17: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  18: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul r0.xyz, r0.wwww, r0.xyzx
  22: mul r1.x, r0.y, r0.y
  23: mad r1.x, r0.x, r0.x, -r1.x
  24: mul r2.xyzw, r0.yzzx, r0.xyzz
  25: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  26: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  27: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  28: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  29: mov r0.w, l(1.000000)
  30: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  31: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  32: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  33: add r0.xyz, r1.xyzx, r2.xyzx
  34: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  35: log r0.xyz, r0.xyzx
  36: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  37: exp r0.xyz, r0.xyzx
  38: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  39: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  40: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 5 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightBuffer" to slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xy w
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: div r0.xy, v3.xyxx, v3.wwww
   1: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   2: log r0.xyz, r0.xyzx
   3: add r0.xyz, -r0.xyzx, v5.xyzx
   4: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   5: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   6: mul o0.xyz, r0.xyzx, r1.xyzx
   7: mov o0.w, l(1.000000)
   8: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: UNITY_HDR_ON 
-- Vertex shader for "d3d9":
// Stats: 48 math
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _MainTex_ST at 19
Vector4 _ProjectionParams at 11
Vector4 unity_SHAb at 14
Vector4 unity_SHAg at 13
Vector4 unity_SHAr at 12
Vector4 unity_SHBb at 17
Vector4 unity_SHBg at 16
Vector4 unity_SHBr at 15
Vector4 unity_SHC at 18

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _MainTex_ST;
//   float4 _ProjectionParams;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   unity_ObjectToWorld c0       4
//   unity_MatrixVP      c4       4
//   unity_WorldToObject c8       3
//   _ProjectionParams   c11      1
//   unity_SHAr          c12      1
//   unity_SHAg          c13      1
//   unity_SHAb          c14      1
//   unity_SHBr          c15      1
//   unity_SHBg          c16      1
//   unity_SHBb          c17      1
//   unity_SHC           c18      1
//   _MainTex_ST         c19      1
//

    vs_3_0
    def c20, 1.05499995, -0.0549999997, 0, 0
    def c21, 1, 0, 0.5, 0.416666657
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_position o0
    dcl_texcoord o1.xy
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5.xyz
    mad o1.xy, v2, c19, c19.zwzw
    dp4 o2.x, c0, v0
    dp4 o2.y, c1, v0
    dp4 o2.z, c2, v0
    mad r0, v0.xyzx, c21.xxxy, c21.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r0.x, c4, r1
    dp4 r0.w, c7, r1
    mul r2.xz, r0.xyww, c21.z
    dp4 r0.y, c5, r1
    dp4 r0.z, c6, r1
    mul r1.x, r0.y, c11.x
    mov r4, r0
    mov o3.zw, r0
    mul r2.w, r1.x, c21.z
    add o3.xy, r2.z, r2.xwzw
    mul r0.xyz, c9, v1.y
    mad r0.xyz, v1.x, c8, r0
    mad r0.xyz, v1.z, c10, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c15, r2
    dp4 r3.y, c16, r2
    dp4 r3.z, c17, r2
    mad r0.xyz, c18, r0.x, r3
    mov r1.w, c21.x
    dp4 r2.x, c12, r1
    dp4 r2.y, c13, r1
    dp4 r2.z, c14, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c21.y
    log r1.x, r0.x
    log r1.y, r0.y
    log r1.z, r0.z
    mul r0.xyz, r1, c21.w
    exp r1.x, r0.x
    exp r1.y, r0.y
    exp r1.z, r0.z
    mad r0.xyz, r1, c20.x, c20.y
    max o5.xyz, r0, c21.y
    mov o4, c21.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 50 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 4 math, 2 textures
Vector4 _Color at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightBuffer" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _Color;
//   sampler2D _LightBuffer;
//   sampler2D _MainTex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   _Color       c0       1
//   _MainTex     s0       1
//   _LightBuffer s1       1
//

    ps_3_0
    def c1, 1, 0, 0, 0
    dcl_texcoord v0.xy
    dcl_texcoord2 v1
    dcl_texcoord4 v2.xyz
    dcl_2d s0
    dcl_2d s1
    texld r0, v0, s0
    mul_pp r0.xyz, r0, c0
    texldp_pp r1, v1, s1
    add_pp r1.xyz, r1, v2
    mul_pp oC0.xyz, r0, r1
    mov_pp oC0.w, c1.x

// approximately 6 instruction slots used (2 texture, 4 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 36 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (752 bytes) on slot 2 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float       
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[6], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[45], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xy
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad o2.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
   5: mul r0.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r0.xyzw, cb4[17].xyzw, r1.xxxx, r0.xyzw
   7: mad r0.xyzw, cb4[19].xyzw, r1.zzzz, r0.xyzw
   8: mad r0.xyzw, cb4[20].xyzw, r1.wwww, r0.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  11: mul r0.y, r0.y, cb1[5].x
  12: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  13: mov o3.zw, r0.zzzw
  14: add o3.xy, r1.zzzz, r1.xwxx
  15: mov o4.xyzw, l(0,0,0,0)
  16: dp3 r0.x, v2.xyzx, cb3[4].xyzx
  17: dp3 r0.y, v2.xyzx, cb3[5].xyzx
  18: dp3 r0.z, v2.xyzx, cb3[6].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul r0.xyz, r0.wwww, r0.xyzx
  22: mul r1.x, r0.y, r0.y
  23: mad r1.x, r0.x, r0.x, -r1.x
  24: mul r2.xyzw, r0.yzzx, r0.xyzz
  25: dp4 r3.x, cb2[41].xyzw, r2.xyzw
  26: dp4 r3.y, cb2[42].xyzw, r2.xyzw
  27: dp4 r3.z, cb2[43].xyzw, r2.xyzw
  28: mad r1.xyz, cb2[44].xyzx, r1.xxxx, r3.xyzx
  29: mov r0.w, l(1.000000)
  30: dp4 r2.x, cb2[38].xyzw, r0.xyzw
  31: dp4 r2.y, cb2[39].xyzw, r0.xyzw
  32: dp4 r2.z, cb2[40].xyzw, r0.xyzw
  33: add r0.xyz, r1.xyzx, r2.xyzx
  34: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  35: log r0.xyz, r0.xyzx
  36: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  37: exp r0.xyz, r0.xyzx
  38: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  39: max o5.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  40: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 4 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_LightBuffer" to slot 1

Constant Buffer "$Globals" (112 bytes) on slot 0 {
  Vector4 _Color at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xy w
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyw
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_temps 2
   0: div r0.xy, v3.xyxx, v3.wwww
   1: sample r0.xyzw, r0.xyxx, t1.xyzw, s1
   2: add r0.xyz, r0.xyzx, v5.xyzx
   3: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   5: mul o0.xyz, r0.xyzx, r1.xyzx
   6: mov o0.w, l(1.000000)
   7: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //         d3d9: 62 math
 //        d3d11: 44 math
 // Stats for Fragment shader:
 //         d3d9: 18 avg math (17..20), 2 texture
 //        d3d11: 11 avg math (11..12), 2 texture
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
No keywords set in this variant.
-- Vertex shader for "d3d9":
// Stats: 62 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _BumpMap_ST at 20
Vector4 _MainTex_ST at 19
Vector4 unity_SHAb at 13
Vector4 unity_SHAg at 12
Vector4 unity_SHAr at 11
Vector4 unity_SHBb at 16
Vector4 unity_SHBg at 15
Vector4 unity_SHBr at 14
Vector4 unity_SHC at 17
Vector4 unity_WorldTransformParams at 18

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _BumpMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_ObjectToWorld        c0       4
//   unity_MatrixVP             c4       4
//   unity_WorldToObject        c8       3
//   unity_SHAr                 c11      1
//   unity_SHAg                 c12      1
//   unity_SHAb                 c13      1
//   unity_SHBr                 c14      1
//   unity_SHBg                 c15      1
//   unity_SHBb                 c16      1
//   unity_SHC                  c17      1
//   unity_WorldTransformParams c18      1
//   _MainTex_ST                c19      1
//   _BumpMap_ST                c20      1
//

    vs_3_0
    def c21, 1.05499995, -0.0549999997, 0, 0
    def c22, 1, 0, 0.416666657, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    mad r0, v0.xyzx, c22.xxxy, c22.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r4.x, c4, r1
    dp4 r4.y, c5, r1
    dp4 r4.z, c6, r1
    dp4 r4.w, c7, r1
    mad o1.xy, v3, c19, c19.zwzw
    mad o1.zw, v3.xyxy, c20.xyxy, c20
    dp4 o2.w, c0, v0
    dp4 o3.w, c1, v0
    dp4 o4.w, c2, v0
    mul r0.xyz, c9, v2.y
    mad r0.xyz, v2.x, c8, r0
    mad r0.xyz, v2.z, c10, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c14, r2
    dp4 r3.y, c15, r2
    dp4 r3.z, c16, r2
    mad r0.xyz, c17, r0.x, r3
    mov r1.w, c22.x
    dp4 r2.x, c11, r1
    dp4 r2.y, c12, r1
    dp4 r2.z, c13, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c22.y
    log r2.x, r0.x
    log r2.y, r0.y
    log r2.z, r0.z
    mul r0.xyz, r2, c22.z
    exp r2.x, r0.x
    exp r2.y, r0.y
    exp r2.z, r0.z
    mad r0.xyz, r2, c21.x, c21.y
    max o6.xyz, r0, c22.y
    dp3 r0.z, c0, v1
    dp3 r0.x, c1, v1
    dp3 r0.y, c2, v1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o2.x, r0.z
    mul r2.xyz, r0, r1.zxyw
    mad r2.xyz, r1.yzxw, r0.yzxw, -r2
    mul r0.z, c18.w, v1.w
    mul r2.xyz, r0.z, r2
    mov o2.y, r2.x
    mov o2.z, r1.x
    mov o3.x, r0.x
    mov o4.x, r0.y
    mov o3.y, r2.y
    mov o4.y, r2.z
    mov o3.z, r1.y
    mov o4.z, r1.z
    mov o5, c22.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 64 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 20 math, 2 textures
Vector4 _Color at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_BumpMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Color;
//   sampler2D _MainTex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   _Color       c0       1
//   _MainTex     s0       1
//   _BumpMap     s1       1
//

    ps_3_0
    def c1, 2, -1, 0, 1
    def c2, 0.5, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_texcoord5_pp v4.xyz
    dcl_2d s0
    dcl_2d s1
    texld_pp r0, v0.zwzw, s1
    mad_pp r0.xy, r0.wyzw, c1.x, c1.y
    dp2add_sat_pp r0.w, r0, r0, c1.z
    add_pp r0.w, -r0.w, c1.w
    rsq_pp r0.w, r0.w
    rcp_pp r0.z, r0.w
    dp3_pp r1.x, v1, r0
    dp3_pp r1.y, v2, r0
    dp3_pp r1.z, v3, r0
    mad_pp oC2.xyz, r1, c2.x, c2.x
    texld r0, v0, s0
    mul_pp r0.xyz, r0, c0
    mul_pp r1.xyz, r0, v4
    mov_pp oC0.xyz, r0
    exp_pp oC3.x, -r1.x
    exp_pp oC3.y, -r1.y
    exp_pp oC3.z, -r1.z
    mov_pp oC0.w, c1.w
    mov_pp oC1, c1.z
    mov_pp oC2.w, c1.w
    mov_pp oC3.w, c1.w

// approximately 22 instruction slots used (2 texture, 20 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 44 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
  Vector4 _BumpMap_ST at 96
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[45], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: mad o1.zw, v3.xxxy, cb0[6].xxxy, cb0[6].zzzw
  11: mov o2.w, r0.x
  12: mul r1.xyz, v1.yyyy, cb2[1].yzxy
  13: mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
  14: mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
  15: dp3 r0.x, r1.xyzx, r1.xyzx
  16: rsq r0.x, r0.x
  17: mul r1.xyz, r0.xxxx, r1.xyzx
  18: mov o2.x, r1.z
  19: mul r0.x, v1.w, cb2[9].w
  20: dp3 r2.x, v2.xyzx, cb2[4].xyzx
  21: dp3 r2.y, v2.xyzx, cb2[5].xyzx
  22: dp3 r2.z, v2.xyzx, cb2[6].xyzx
  23: dp3 r0.w, r2.xyzx, r2.xyzx
  24: rsq r0.w, r0.w
  25: mul r2.xyz, r0.wwww, r2.xyzx
  26: mul r3.xyz, r1.xyzx, r2.zxyz
  27: mad r3.xyz, r2.yzxy, r1.yzxy, -r3.xyzx
  28: mul r3.xyz, r0.xxxx, r3.xyzx
  29: mov o2.y, r3.x
  30: mov o2.z, r2.x
  31: mov o3.x, r1.x
  32: mov o4.x, r1.y
  33: mov o3.w, r0.y
  34: mov o4.w, r0.z
  35: mov o3.y, r3.y
  36: mov o4.y, r3.z
  37: mov o3.z, r2.y
  38: mov o4.z, r2.z
  39: mov o5.xyzw, l(0,0,0,0)
  40: mul r0.x, r2.y, r2.y
  41: mad r0.x, r2.x, r2.x, -r0.x
  42: mul r1.xyzw, r2.yzzx, r2.xyzz
  43: dp4 r3.x, cb1[41].xyzw, r1.xyzw
  44: dp4 r3.y, cb1[42].xyzw, r1.xyzw
  45: dp4 r3.z, cb1[43].xyzw, r1.xyzw
  46: mad r0.xyz, cb1[44].xyzx, r0.xxxx, r3.xyzx
  47: mov r2.w, l(1.000000)
  48: dp4 r1.x, cb1[38].xyzw, r2.xyzw
  49: dp4 r1.y, cb1[39].xyzw, r2.xyzw
  50: dp4 r1.z, cb1[40].xyzw, r2.xyzw
  51: add r0.xyz, r0.xyzx, r1.xyzx
  52: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: log r0.xyz, r0.xyzx
  54: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  55: exp r0.xyz, r0.xyzx
  56: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  57: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  58: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 12 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_BumpMap" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: mov o0.xyz, r0.xyzx
   3: mul r0.xyz, r0.xyzx, v6.xyzx
   4: exp o3.xyz, -r0.xyzx
   5: mov o0.w, l(1.000000)
   6: mov o1.xyzw, l(0,0,0,0)
   7: sample r0.xyzw, v1.zwzz, t1.xyzw, s1
   8: mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   9: dp2 r0.w, r0.xyxx, r0.xyxx
  10: min r0.w, r0.w, l(1.000000)
  11: add r0.w, -r0.w, l(1.000000)
  12: sqrt r0.z, r0.w
  13: dp3 r1.x, v2.xyzx, r0.xyzx
  14: dp3 r1.y, v3.xyzx, r0.xyzx
  15: dp3 r1.z, v4.xyzx, r0.xyzx
  16: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  17: mov o2.w, l(1.000000)
  18: mov o3.w, l(1.000000)
  19: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Keywords set in this variant: UNITY_HDR_ON 
-- Vertex shader for "d3d9":
// Stats: 62 math
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Matrix4x4 unity_MatrixVP at 4
Matrix4x4 unity_ObjectToWorld at 0
Matrix4x3 unity_WorldToObject at 8
Vector4 _BumpMap_ST at 20
Vector4 _MainTex_ST at 19
Vector4 unity_SHAb at 13
Vector4 unity_SHAg at 12
Vector4 unity_SHAr at 11
Vector4 unity_SHBb at 16
Vector4 unity_SHBg at 15
Vector4 unity_SHBr at 14
Vector4 unity_SHC at 17
Vector4 unity_WorldTransformParams at 18

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float4 _BumpMap_ST;
//   float4 _MainTex_ST;
//   row_major float4x4 unity_MatrixVP;
//   row_major float4x4 unity_ObjectToWorld;
//   float4 unity_SHAb;
//   float4 unity_SHAg;
//   float4 unity_SHAr;
//   float4 unity_SHBb;
//   float4 unity_SHBg;
//   float4 unity_SHBr;
//   float4 unity_SHC;
//   row_major float4x4 unity_WorldToObject;
//   float4 unity_WorldTransformParams;
//
//
// Registers:
//
//   Name                       Reg   Size
//   -------------------------- ----- ----
//   unity_ObjectToWorld        c0       4
//   unity_MatrixVP             c4       4
//   unity_WorldToObject        c8       3
//   unity_SHAr                 c11      1
//   unity_SHAg                 c12      1
//   unity_SHAb                 c13      1
//   unity_SHBr                 c14      1
//   unity_SHBg                 c15      1
//   unity_SHBb                 c16      1
//   unity_SHC                  c17      1
//   unity_WorldTransformParams c18      1
//   _MainTex_ST                c19      1
//   _BumpMap_ST                c20      1
//

    vs_3_0
    def c21, 1.05499995, -0.0549999997, 0, 0
    def c22, 1, 0, 0.416666657, 0
    dcl_position v0
    dcl_tangent v1
    dcl_normal v2
    dcl_texcoord v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2
    dcl_texcoord2 o3
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6.xyz
    mad r0, v0.xyzx, c22.xxxy, c22.yyyx
    dp4 r1.x, c0, r0
    dp4 r1.y, c1, r0
    dp4 r1.z, c2, r0
    dp4 r1.w, c3, r0
    dp4 r4.x, c4, r1
    dp4 r4.y, c5, r1
    dp4 r4.z, c6, r1
    dp4 r4.w, c7, r1
    mad o1.xy, v3, c19, c19.zwzw
    mad o1.zw, v3.xyxy, c20.xyxy, c20
    dp4 o2.w, c0, v0
    dp4 o3.w, c1, v0
    dp4 o4.w, c2, v0
    mul r0.xyz, c9, v2.y
    mad r0.xyz, v2.x, c8, r0
    mad r0.xyz, v2.z, c10, r0
    nrm r1.xyz, r0
    mul r0.x, r1.y, r1.y
    mad r0.x, r1.x, r1.x, -r0.x
    mul r2, r1.yzzx, r1.xyzz
    dp4 r3.x, c14, r2
    dp4 r3.y, c15, r2
    dp4 r3.z, c16, r2
    mad r0.xyz, c17, r0.x, r3
    mov r1.w, c22.x
    dp4 r2.x, c11, r1
    dp4 r2.y, c12, r1
    dp4 r2.z, c13, r1
    add r0.xyz, r0, r2
    max r0.xyz, r0, c22.y
    log r2.x, r0.x
    log r2.y, r0.y
    log r2.z, r0.z
    mul r0.xyz, r2, c22.z
    exp r2.x, r0.x
    exp r2.y, r0.y
    exp r2.z, r0.z
    mad r0.xyz, r2, c21.x, c21.y
    max o6.xyz, r0, c22.y
    dp3 r0.z, c0, v1
    dp3 r0.x, c1, v1
    dp3 r0.y, c2, v1
    dp3 r0.w, r0, r0
    rsq r0.w, r0.w
    mul r0.xyz, r0.w, r0
    mov o2.x, r0.z
    mul r2.xyz, r0, r1.zxyw
    mad r2.xyz, r1.yzxw, r0.yzxw, -r2
    mul r0.z, c18.w, v1.w
    mul r2.xyz, r0.z, r2
    mov o2.y, r2.x
    mov o2.z, r1.x
    mov o3.x, r0.x
    mov o4.x, r0.y
    mov o3.y, r2.y
    mov o4.y, r2.z
    mov o3.z, r1.y
    mov o4.z, r1.z
    mov o5, c22.y
    mad o0.xy, r4.w, c255, r4
    mov o0.zw, r4

// approximately 64 instruction slots used


-- Fragment shader for "d3d9":
// Stats: 17 math, 2 textures
Vector4 _Color at 0

Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_BumpMap" to slot 1

Shader Disassembly:
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   sampler2D _BumpMap;
//   float4 _Color;
//   sampler2D _MainTex;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   _Color       c0       1
//   _MainTex     s0       1
//   _BumpMap     s1       1
//

    ps_3_0
    def c1, 2, -1, 0, 1
    def c2, 0.5, 0, 0, 0
    dcl_texcoord v0
    dcl_texcoord1 v1.xyz
    dcl_texcoord2 v2.xyz
    dcl_texcoord3 v3.xyz
    dcl_texcoord5_pp v4.xyz
    dcl_2d s0
    dcl_2d s1
    texld_pp r0, v0.zwzw, s1
    mad_pp r0.xy, r0.wyzw, c1.x, c1.y
    dp2add_sat_pp r0.w, r0, r0, c1.z
    add_pp r0.w, -r0.w, c1.w
    rsq_pp r0.w, r0.w
    rcp_pp r0.z, r0.w
    dp3_pp r1.x, v1, r0
    dp3_pp r1.y, v2, r0
    dp3_pp r1.z, v3, r0
    mad_pp oC2.xyz, r1, c2.x, c2.x
    texld r0, v0, s0
    mul_pp r0.xyz, r0, c0
    mul_pp oC3.xyz, r0, v4
    mov_pp oC0.xyz, r0
    mov_pp oC0.w, c1.w
    mov_pp oC1, c1.z
    mov_pp oC2.w, c1.w
    mov_pp oC3.w, c1.w

// approximately 19 instruction slots used (2 texture, 17 arithmetic)


-- Vertex shader for "d3d11":
// Stats: 44 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "TexCoord3"
Uses vertex data channel "Color"
Uses vertex data channel "TexCoord"

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _MainTex_ST at 80
  Vector4 _BumpMap_ST at 96
}
Constant Buffer "UnityLighting" (752 bytes) on slot 1 {
  Vector4 unity_SHAr at 608
  Vector4 unity_SHAg at 624
  Vector4 unity_SHAb at 640
  Vector4 unity_SHBr at 656
  Vector4 unity_SHBg at 672
  Vector4 unity_SHBb at 688
  Vector4 unity_SHC at 704
}
Constant Buffer "UnityPerDraw" (160 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (384 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TANGENT                  0   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float       
// TEXCOORD                 2   xyzw        5     NONE   float       
// TEXCOORD                 3   xyzw        6     NONE   float       
// COLOR                    0   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
      vs_4_0
      dcl_constantbuffer CB0[7], immediateIndexed
      dcl_constantbuffer CB1[45], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyzw
      dcl_input v2.xyz
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
   5: mul r2.xyzw, r1.yyyy, cb3[18].xyzw
   6: mad r2.xyzw, cb3[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[20].xyzw, r1.wwww, r2.xyzw
   9: mad o1.xy, v3.xyxx, cb0[5].xyxx, cb0[5].zwzz
  10: mad o1.zw, v3.xxxy, cb0[6].xxxy, cb0[6].zzzw
  11: mov o2.w, r0.x
  12: mul r1.xyz, v1.yyyy, cb2[1].yzxy
  13: mad r1.xyz, cb2[0].yzxy, v1.xxxx, r1.xyzx
  14: mad r1.xyz, cb2[2].yzxy, v1.zzzz, r1.xyzx
  15: dp3 r0.x, r1.xyzx, r1.xyzx
  16: rsq r0.x, r0.x
  17: mul r1.xyz, r0.xxxx, r1.xyzx
  18: mov o2.x, r1.z
  19: mul r0.x, v1.w, cb2[9].w
  20: dp3 r2.x, v2.xyzx, cb2[4].xyzx
  21: dp3 r2.y, v2.xyzx, cb2[5].xyzx
  22: dp3 r2.z, v2.xyzx, cb2[6].xyzx
  23: dp3 r0.w, r2.xyzx, r2.xyzx
  24: rsq r0.w, r0.w
  25: mul r2.xyz, r0.wwww, r2.xyzx
  26: mul r3.xyz, r1.xyzx, r2.zxyz
  27: mad r3.xyz, r2.yzxy, r1.yzxy, -r3.xyzx
  28: mul r3.xyz, r0.xxxx, r3.xyzx
  29: mov o2.y, r3.x
  30: mov o2.z, r2.x
  31: mov o3.x, r1.x
  32: mov o4.x, r1.y
  33: mov o3.w, r0.y
  34: mov o4.w, r0.z
  35: mov o3.y, r3.y
  36: mov o4.y, r3.z
  37: mov o3.z, r2.y
  38: mov o4.z, r2.z
  39: mov o5.xyzw, l(0,0,0,0)
  40: mul r0.x, r2.y, r2.y
  41: mad r0.x, r2.x, r2.x, -r0.x
  42: mul r1.xyzw, r2.yzzx, r2.xyzz
  43: dp4 r3.x, cb1[41].xyzw, r1.xyzw
  44: dp4 r3.y, cb1[42].xyzw, r1.xyzw
  45: dp4 r3.z, cb1[43].xyzw, r1.xyzw
  46: mad r0.xyz, cb1[44].xyzx, r0.xxxx, r3.xyzx
  47: mov r2.w, l(1.000000)
  48: dp4 r1.x, cb1[38].xyzw, r2.xyzw
  49: dp4 r1.y, cb1[39].xyzw, r2.xyzw
  50: dp4 r1.z, cb1[40].xyzw, r2.xyzw
  51: add r0.xyz, r0.xyzx, r1.xyzx
  52: max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  53: log r0.xyz, r0.xyzx
  54: mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
  55: exp r0.xyz, r0.xyzx
  56: mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
  57: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  58: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// Stats: 11 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_BumpMap" to slot 1

Constant Buffer "$Globals" (128 bytes) on slot 0 {
  Vector4 _Color at 64
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float       
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[5], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xyzw
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: mov o0.xyz, r0.xyzx
   3: mul o3.xyz, r0.xyzx, v6.xyzx
   4: mov o0.w, l(1.000000)
   5: mov o1.xyzw, l(0,0,0,0)
   6: sample r0.xyzw, v1.zwzz, t1.xyzw, s1
   7: mad r0.xy, r0.wyww, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: dp2 r0.w, r0.xyxx, r0.xyxx
   9: min r0.w, r0.w, l(1.000000)
  10: add r0.w, -r0.w, l(1.000000)
  11: sqrt r0.z, r0.w
  12: dp3 r1.x, v2.xyzx, r0.xyzx
  13: dp3 r1.y, v3.xyzx, r0.xyzx
  14: dp3 r1.z, v4.xyzx, r0.xyzx
  15: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: mov o2.w, l(1.000000)
  17: mov o3.w, l(1.000000)
  18: ret 
// Approximately 0 instruction slots used


 }
}
Fallback "Legacy Shaders/Diffuse"
}